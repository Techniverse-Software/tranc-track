{"version":3,"sources":["webpack:///node_modules/ng-otp-input/fesm2015/ng-otp-input.js"],"names":["NgOtpInputComponent_div_0_input_1_Template","rf","ctx","_r5","NgOtpInputComponent_div_0_input_1_Template_input_keydown_0_listener","$event","ctx_r4","onKeyDown","NgOtpInputComponent_div_0_input_1_Template_input_keyup_0_listener","i_r3","index","ctx_r6","onKeyUp","item_r2","$implicit","ctx_r1","config","inputClass","componentKey","allowNumbersOnly","inputType","placeholder","inputStyles","otpForm","controls","NgOtpInputComponent_div_0_Template","ctx_r0","containerClass","containerStyles","KeysPipe","value","Object","keys","ɵfac","KeysPipe_Factory","t","ɵpipe","name","type","pure","ngDevMode","args","Config","NgOtpInputComponent","keysPipe","length","onInputChange","inputControls","Array","Math","random","toString","substring","Date","getTime","addControl","getControlName","getInputType","disableAutoFocus","containerItem","document","getElementById","addEventListener","evt","handlePaste","ele","getElementsByClassName","focus","idx","event","ifKeyCode","key","targetCode","keyCode","charCode","isSpace","inputIdx","nextInputId","appendKey","prevInputId","ifRightArrow","setSelected","ifLeftArrow","isBackspace","ifBackspaceOrDelete","target","rebuildValue","ifValidEntry","id","eleId","focusTo","setSelectionRange","setTimeout","inp","String","fromCharCode","isMobile","test","navigator","userAgent","allowKeyCodes","includes","isNaN","reset","replace","from","forEach","c","get","setValue","indexOfElementToFocus","val","transform","k","emit","isPasswordInput","e","clipboardData","window","pastedData","getData","stopPropagation","preventDefault","NgOtpInputComponent_Factory","ɵcmp","selectors","inputs","outputs","decls","vars","consts","template","NgOtpInputComponent_Template","directives","NumberOnlyDirective","pipes","styles","ctorParameters","propDecorators","selector","_elRef","_renderer","disabledNumberOnly","setAttribute","nativeElement","NumberOnlyDirective_Factory","ɵdir","NgOtpInputModule","NgOtpInputModule_Factory","ɵmod","ɵinj","providers","imports","ngJitMode","declarations","exports"],"mappings":"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","file":"default~views-auth-auth-module~views-profile-profile-module-es5.js","sourcesContent":["import { Pipe, EventEmitter, Component, Input, Output, Directive, ElementRef, Renderer2, NgModule } from '@angular/core';\nimport { FormGroup, FormControl, FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/common';\nimport * as ɵngcc2 from '@angular/forms';\n\nfunction NgOtpInputComponent_div_0_input_1_Template(rf, ctx) { if (rf & 1) {\n    const _r5 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"input\", 3);\n    ɵngcc0.ɵɵlistener(\"keydown\", function NgOtpInputComponent_div_0_input_1_Template_input_keydown_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r5); const ctx_r4 = ɵngcc0.ɵɵnextContext(2); return ctx_r4.onKeyDown($event); })(\"keyup\", function NgOtpInputComponent_div_0_input_1_Template_input_keyup_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r5); const i_r3 = ctx.index; const ctx_r6 = ɵngcc0.ɵɵnextContext(2); return ctx_r6.onKeyUp($event, i_r3); });\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const item_r2 = ctx.$implicit;\n    const i_r3 = ctx.index;\n    const ctx_r1 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵclassMapInterpolate1(\"otp-input \", ctx_r1.config.inputClass, \"\");\n    ɵngcc0.ɵɵpropertyInterpolate2(\"id\", \"otp_\", i_r3, \"_\", ctx_r1.componentKey, \"\");\n    ɵngcc0.ɵɵproperty(\"pattern\", ctx_r1.config.allowNumbersOnly ? \"\\\\d*\" : \"\")(\"type\", ctx_r1.inputType)(\"placeholder\", (ctx_r1.config == null ? null : ctx_r1.config.placeholder) || \"\")(\"disabledNumberOnly\", !ctx_r1.config.allowNumbersOnly)(\"ngStyle\", ctx_r1.config.inputStyles)(\"formControl\", ctx_r1.otpForm.controls[item_r2]);\n} }\nfunction NgOtpInputComponent_div_0_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 1);\n    ɵngcc0.ɵɵtemplate(1, NgOtpInputComponent_div_0_input_1_Template, 1, 11, \"input\", 2);\n    ɵngcc0.ɵɵpipe(2, \"keys\");\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵclassMapInterpolate1(\"wrapper \", ctx_r0.config.containerClass, \"\");\n    ɵngcc0.ɵɵpropertyInterpolate1(\"id\", \"c_\", ctx_r0.componentKey, \"\");\n    ɵngcc0.ɵɵproperty(\"ngStyle\", ctx_r0.config.containerStyles);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngForOf\", ɵngcc0.ɵɵpipeBind1(2, 6, ctx_r0.otpForm == null ? null : ctx_r0.otpForm.controls));\n} }\nclass KeysPipe {\r\n    /**\r\n     * @param {?} value\r\n     * @return {?}\r\n     */\r\n    transform(value) {\r\n        return Object.keys(value);\r\n    }\r\n}\nKeysPipe.ɵfac = function KeysPipe_Factory(t) { return new (t || KeysPipe)(); };\nKeysPipe.ɵpipe = ɵngcc0.ɵɵdefinePipe({ name: \"keys\", type: KeysPipe, pure: true });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(KeysPipe, [{\n        type: Pipe,\n        args: [{\n                name: 'keys'\n            }]\n    }], null, null); })();\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nclass Config {\r\n}\r\nif (false) {\r\n    /** @type {?} */\r\n    Config.prototype.inputStyles;\r\n    /** @type {?} */\r\n    Config.prototype.containerStyles;\r\n    /** @type {?} */\r\n    Config.prototype.allowKeyCodes;\r\n    /** @type {?} */\r\n    Config.prototype.length;\r\n    /** @type {?} */\r\n    Config.prototype.allowNumbersOnly;\r\n    /** @type {?} */\r\n    Config.prototype.inputClass;\r\n    /** @type {?} */\r\n    Config.prototype.containerClass;\r\n    /** @type {?} */\r\n    Config.prototype.isPasswordInput;\r\n    /** @type {?} */\r\n    Config.prototype.disableAutoFocus;\r\n    /** @type {?} */\r\n    Config.prototype.placeholder;\r\n}\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nclass NgOtpInputComponent {\r\n    /**\r\n     * @param {?} keysPipe\r\n     */\r\n    constructor(keysPipe) {\r\n        this.keysPipe = keysPipe;\r\n        this.config = { length: 4 };\r\n        // tslint:disable-next-line: no-output-on-prefix\r\n        this.onInputChange = new EventEmitter();\r\n        this.inputControls = new Array(this.config.length);\r\n        this.componentKey = Math.random()\r\n            .toString(36)\r\n            .substring(2) + new Date().getTime().toString(36);\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    ngOnInit() {\r\n        this.otpForm = new FormGroup({});\r\n        for (let index = 0; index < this.config.length; index++) {\r\n            this.otpForm.addControl(this.getControlName(index), new FormControl());\r\n        }\r\n        this.inputType = this.getInputType();\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    ngAfterViewInit() {\r\n        if (!this.config.disableAutoFocus) {\r\n            /** @type {?} */\r\n            const containerItem = document.getElementById(`c_${this.componentKey}`);\r\n            if (containerItem) {\r\n                containerItem.addEventListener('paste', (/**\r\n                 * @param {?} evt\r\n                 * @return {?}\r\n                 */\r\n                (evt) => this.handlePaste(evt)));\r\n                /** @type {?} */\r\n                const ele = containerItem.getElementsByClassName('otp-input')[0];\r\n                if (ele && ele.focus) {\r\n                    ele.focus();\r\n                }\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * @private\r\n     * @param {?} idx\r\n     * @return {?}\r\n     */\r\n    getControlName(idx) {\r\n        return `ctrl_${idx}`;\r\n    }\r\n    /**\r\n     * @param {?} event\r\n     * @return {?}\r\n     */\r\n    ifLeftArrow(event) {\r\n        return this.ifKeyCode(event, 37);\r\n    }\r\n    /**\r\n     * @param {?} event\r\n     * @return {?}\r\n     */\r\n    ifRightArrow(event) {\r\n        return this.ifKeyCode(event, 39);\r\n    }\r\n    /**\r\n     * @param {?} event\r\n     * @return {?}\r\n     */\r\n    ifBackspaceOrDelete(event) {\r\n        return (event.key === 'Backspace' ||\r\n            event.key === 'Delete' ||\r\n            this.ifKeyCode(event, 8) ||\r\n            this.ifKeyCode(event, 46));\r\n    }\r\n    /**\r\n     * @param {?} event\r\n     * @param {?} targetCode\r\n     * @return {?}\r\n     */\r\n    ifKeyCode(event, targetCode) {\r\n        /** @type {?} */\r\n        const key = event.keyCode || event.charCode;\r\n        // tslint:disable-next-line: triple-equals\r\n        return key == targetCode ? true : false;\r\n    }\r\n    /**\r\n     * @param {?} $event\r\n     * @return {?}\r\n     */\r\n    onKeyDown($event) {\r\n        /** @type {?} */\r\n        var isSpace = this.ifKeyCode($event, 32);\r\n        if (isSpace) { // prevent space\r\n            return false;\r\n        }\r\n    }\r\n    /**\r\n     * @param {?} $event\r\n     * @param {?} inputIdx\r\n     * @return {?}\r\n     */\r\n    onKeyUp($event, inputIdx) {\r\n        /** @type {?} */\r\n        const nextInputId = this.appendKey(`otp_${inputIdx + 1}`);\r\n        /** @type {?} */\r\n        const prevInputId = this.appendKey(`otp_${inputIdx - 1}`);\r\n        if (this.ifRightArrow($event)) {\r\n            this.setSelected(nextInputId);\r\n            return;\r\n        }\r\n        if (this.ifLeftArrow($event)) {\r\n            this.setSelected(prevInputId);\r\n            return;\r\n        }\r\n        /** @type {?} */\r\n        const isBackspace = this.ifBackspaceOrDelete($event);\r\n        if (isBackspace && !$event.target.value) {\r\n            this.setSelected(prevInputId);\r\n            this.rebuildValue();\r\n            return;\r\n        }\r\n        if (!$event.target.value) {\r\n            return;\r\n        }\r\n        if (this.ifValidEntry($event)) {\r\n            this.setSelected(nextInputId);\r\n        }\r\n        this.rebuildValue();\r\n    }\r\n    /**\r\n     * @param {?} id\r\n     * @return {?}\r\n     */\r\n    appendKey(id) {\r\n        return `${id}_${this.componentKey}`;\r\n    }\r\n    /**\r\n     * @param {?} eleId\r\n     * @return {?}\r\n     */\r\n    setSelected(eleId) {\r\n        this.focusTo(eleId);\r\n        /** @type {?} */\r\n        const ele = document.getElementById(eleId);\r\n        if (ele && ele.setSelectionRange) {\r\n            setTimeout((/**\r\n             * @return {?}\r\n             */\r\n            () => {\r\n                ele.setSelectionRange(0, 1);\r\n            }), 0);\r\n        }\r\n    }\r\n    /**\r\n     * @param {?} event\r\n     * @return {?}\r\n     */\r\n    ifValidEntry(event) {\r\n        /** @type {?} */\r\n        const inp = String.fromCharCode(event.keyCode);\r\n        /** @type {?} */\r\n        const isMobile = /iPhone|iPad|iPod|Android/i.test(navigator.userAgent);\r\n        return (isMobile ||\r\n            /[a-zA-Z0-9-_]/.test(inp) ||\r\n            (this.config.allowKeyCodes &&\r\n                this.config.allowKeyCodes.includes(event.keyCode)) ||\r\n            (event.keyCode >= 96 && event.keyCode <= 105));\r\n    }\r\n    /**\r\n     * @param {?} eleId\r\n     * @return {?}\r\n     */\r\n    focusTo(eleId) {\r\n        /** @type {?} */\r\n        const ele = document.getElementById(eleId);\r\n        if (ele) {\r\n            ele.focus();\r\n        }\r\n    }\r\n    // method to set component value\r\n    /**\r\n     * @param {?} value\r\n     * @return {?}\r\n     */\r\n    setValue(value) {\r\n        if (this.config.allowNumbersOnly && isNaN(value)) {\r\n            return;\r\n        }\r\n        this.otpForm.reset();\r\n        if (!value) {\r\n            this.rebuildValue();\r\n            return;\r\n        }\r\n        value = value.toString().replace(/\\s/g, ''); // remove whitespace\r\n        Array.from(value).forEach((/**\r\n         * @param {?} c\r\n         * @param {?} idx\r\n         * @return {?}\r\n         */\r\n        (c, idx) => {\r\n            if (this.otpForm.get(this.getControlName(idx))) {\r\n                this.otpForm.get(this.getControlName(idx)).setValue(c);\r\n            }\r\n        }));\r\n        if (!this.config.disableAutoFocus) {\r\n            /** @type {?} */\r\n            const containerItem = document.getElementById(`c_${this.componentKey}`);\r\n            /** @type {?} */\r\n            var indexOfElementToFocus = value.length < this.config.length ? value.length : (this.config.length - 1);\r\n            /** @type {?} */\r\n            let ele = containerItem.getElementsByClassName('otp-input')[indexOfElementToFocus];\r\n            if (ele && ele.focus) {\r\n                ele.focus();\r\n            }\r\n        }\r\n        this.rebuildValue();\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    rebuildValue() {\r\n        /** @type {?} */\r\n        let val = '';\r\n        this.keysPipe.transform(this.otpForm.controls).forEach((/**\r\n         * @param {?} k\r\n         * @return {?}\r\n         */\r\n        k => {\r\n            if (this.otpForm.controls[k].value) {\r\n                val += this.otpForm.controls[k].value;\r\n            }\r\n        }));\r\n        this.onInputChange.emit(val);\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    getInputType() {\r\n        return this.config.isPasswordInput\r\n            ? 'password'\r\n            : this.config.allowNumbersOnly\r\n                ? 'tel'\r\n                : 'text';\r\n    }\r\n    /**\r\n     * @param {?} e\r\n     * @return {?}\r\n     */\r\n    handlePaste(e) {\r\n        // Get pasted data via clipboard API\r\n        /** @type {?} */\r\n        let clipboardData = e.clipboardData || window['clipboardData'];\r\n        if (clipboardData) {\r\n            /** @type {?} */\r\n            var pastedData = clipboardData.getData('Text');\r\n        }\r\n        // Stop data actually being pasted into div\r\n        e.stopPropagation();\r\n        e.preventDefault();\r\n        if (!pastedData) {\r\n            return;\r\n        }\r\n        this.setValue(pastedData);\r\n    }\r\n}\nNgOtpInputComponent.ɵfac = function NgOtpInputComponent_Factory(t) { return new (t || NgOtpInputComponent)(ɵngcc0.ɵɵdirectiveInject(KeysPipe)); };\nNgOtpInputComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: NgOtpInputComponent, selectors: [[\"ng-otp-input\"]], inputs: { config: \"config\" }, outputs: { onInputChange: \"onInputChange\" }, decls: 1, vars: 1, consts: [[3, \"class\", \"id\", \"ngStyle\", 4, \"ngIf\"], [3, \"id\", \"ngStyle\"], [\"numberOnly\", \"\", \"maxlength\", \"1\", \"autocomplete\", \"off\", 3, \"pattern\", \"type\", \"placeholder\", \"disabledNumberOnly\", \"ngStyle\", \"class\", \"formControl\", \"id\", \"keydown\", \"keyup\", 4, \"ngFor\", \"ngForOf\"], [\"numberOnly\", \"\", \"maxlength\", \"1\", \"autocomplete\", \"off\", 3, \"pattern\", \"type\", \"placeholder\", \"disabledNumberOnly\", \"ngStyle\", \"formControl\", \"id\", \"keydown\", \"keyup\"]], template: function NgOtpInputComponent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵtemplate(0, NgOtpInputComponent_div_0_Template, 3, 8, \"div\", 0);\n    } if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.otpForm == null ? null : ctx.otpForm.controls);\n    } }, directives: function () { return [ɵngcc1.NgIf, ɵngcc1.NgStyle, ɵngcc1.NgForOf, ɵngcc2.DefaultValueAccessor, NumberOnlyDirective, ɵngcc2.MaxLengthValidator, ɵngcc2.PatternValidator, ɵngcc2.NgControlStatus, ɵngcc2.FormControlDirective]; }, pipes: function () { return [KeysPipe]; }, styles: [\".otp-input[_ngcontent-%COMP%]{width:50px;height:50px;border-radius:4px;border:1px solid #c5c5c5;text-align:center;font-size:32px}.wrapper[_ngcontent-%COMP%]   .otp-input[_ngcontent-%COMP%]:not(:last-child){margin-right:8px}@media screen and (max-width:767px){.otp-input[_ngcontent-%COMP%]{width:40px;font-size:24px;height:40px}}@media screen and (max-width:420px){.otp-input[_ngcontent-%COMP%]{width:30px;font-size:18px;height:30px}}\"] });\r\n/** @nocollapse */\r\nNgOtpInputComponent.ctorParameters = () => [\r\n    { type: KeysPipe }\r\n];\r\nNgOtpInputComponent.propDecorators = {\r\n    config: [{ type: Input }],\r\n    onInputChange: [{ type: Output }]\r\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgOtpInputComponent, [{\n        type: Component,\n        args: [{\n                // tslint:disable-next-line: component-selector\n                selector: 'ng-otp-input',\n                template: \"<div class=\\\"wrapper {{config.containerClass}}\\\" id=\\\"c_{{componentKey}}\\\" *ngIf=\\\"otpForm?.controls\\\"\\r\\n  [ngStyle]=\\\"config.containerStyles\\\">\\r\\n  <input [pattern]=\\\"config.allowNumbersOnly ? '\\\\\\\\d*' : ''\\\" [type]=\\\"inputType\\\" numberOnly [placeholder]=\\\"config?.placeholder || ''\\\"\\r\\n    [disabledNumberOnly]=\\\"!config.allowNumbersOnly\\\" [ngStyle]=\\\"config.inputStyles\\\" maxlength=\\\"1\\\"\\r\\n    class=\\\"otp-input {{config.inputClass}}\\\" autocomplete=\\\"off\\\" *ngFor=\\\"let item of otpForm?.controls | keys;let i=index\\\"\\r\\n    [formControl]=\\\"otpForm.controls[item]\\\" id=\\\"otp_{{i}}_{{componentKey}}\\\" (keydown)=\\\"onKeyDown($event)\\\"\\r\\n    (keyup)=\\\"onKeyUp($event,i)\\\">\\r\\n</div>\",\n                styles: [\".otp-input{width:50px;height:50px;border-radius:4px;border:1px solid #c5c5c5;text-align:center;font-size:32px}.wrapper .otp-input:not(:last-child){margin-right:8px}@media screen and (max-width:767px){.otp-input{width:40px;font-size:24px;height:40px}}@media screen and (max-width:420px){.otp-input{width:30px;font-size:18px;height:30px}}\"]\n            }]\n    }], function () { return [{ type: KeysPipe }]; }, { config: [{\n            type: Input\n        }], onInputChange: [{\n            type: Output\n        }] }); })();\r\nif (false) {\r\n    /** @type {?} */\r\n    NgOtpInputComponent.prototype.config;\r\n    /** @type {?} */\r\n    NgOtpInputComponent.prototype.onInputChange;\r\n    /** @type {?} */\r\n    NgOtpInputComponent.prototype.otpForm;\r\n    /** @type {?} */\r\n    NgOtpInputComponent.prototype.inputControls;\r\n    /** @type {?} */\r\n    NgOtpInputComponent.prototype.componentKey;\r\n    /** @type {?} */\r\n    NgOtpInputComponent.prototype.inputType;\r\n    /**\r\n     * @type {?}\r\n     * @private\r\n     */\r\n    NgOtpInputComponent.prototype.keysPipe;\r\n}\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nclass NumberOnlyDirective {\r\n    /**\r\n     * @param {?} _elRef\r\n     * @param {?} _renderer\r\n     */\r\n    constructor(_elRef, _renderer) {\r\n        this._elRef = _elRef;\r\n        this._renderer = _renderer;\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    ngOnInit() {\r\n        if (!this.disabledNumberOnly) {\r\n            this._renderer.setAttribute(this._elRef.nativeElement, 'onkeypress', 'return (event.charCode >= 48 && event.charCode <= 57) || event.charCode == 0');\r\n        }\r\n    }\r\n}\nNumberOnlyDirective.ɵfac = function NumberOnlyDirective_Factory(t) { return new (t || NumberOnlyDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2)); };\nNumberOnlyDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: NumberOnlyDirective, selectors: [[\"\", \"numberOnly\", \"\"]], inputs: { disabledNumberOnly: \"disabledNumberOnly\" } });\r\n/** @nocollapse */\r\nNumberOnlyDirective.ctorParameters = () => [\r\n    { type: ElementRef },\r\n    { type: Renderer2 }\r\n];\r\nNumberOnlyDirective.propDecorators = {\r\n    disabledNumberOnly: [{ type: Input }]\r\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NumberOnlyDirective, [{\n        type: Directive,\n        args: [{\n                selector: '[numberOnly]'\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.Renderer2 }]; }, { disabledNumberOnly: [{\n            type: Input\n        }] }); })();\r\nif (false) {\r\n    /** @type {?} */\r\n    NumberOnlyDirective.prototype.disabledNumberOnly;\r\n    /**\r\n     * @type {?}\r\n     * @private\r\n     */\r\n    NumberOnlyDirective.prototype._elRef;\r\n    /**\r\n     * @type {?}\r\n     * @private\r\n     */\r\n    NumberOnlyDirective.prototype._renderer;\r\n}\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nclass NgOtpInputModule {\r\n}\nNgOtpInputModule.ɵfac = function NgOtpInputModule_Factory(t) { return new (t || NgOtpInputModule)(); };\nNgOtpInputModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: NgOtpInputModule });\nNgOtpInputModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ providers: [KeysPipe], imports: [[\n            CommonModule,\n            FormsModule,\n            ReactiveFormsModule\n        ]] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NgOtpInputModule, { declarations: function () { return [NgOtpInputComponent, KeysPipe, NumberOnlyDirective]; }, imports: function () { return [CommonModule,\n        FormsModule,\n        ReactiveFormsModule]; }, exports: function () { return [NgOtpInputComponent]; } }); })();\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgOtpInputModule, [{\n        type: NgModule,\n        args: [{\n                imports: [\n                    CommonModule,\n                    FormsModule,\n                    ReactiveFormsModule\n                ],\n                declarations: [NgOtpInputComponent, KeysPipe, NumberOnlyDirective],\n                exports: [NgOtpInputComponent],\n                providers: [KeysPipe]\n            }]\n    }], null, null); })();\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\n\nexport { NgOtpInputModule, NgOtpInputComponent as ɵa, KeysPipe as ɵb, NumberOnlyDirective as ɵc };\n\n//# sourceMappingURL=ng-otp-input.js.map"]}