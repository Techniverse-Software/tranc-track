{"version":3,"sources":["./src/app/views/pending-req/pending-req-list/pending-req-list.component.scss","./src/app/views/pending-req/pending-req-list/pending-req-list.component.ts","./src/app/views/pending-req/pending-req.module.ts","./src/app/views/pending-req/pending-req-list/pending-req-list.component.html"],"names":[],"mappings":"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","file":"views-pending-req-pending-req-module-es2015.js","sourcesContent":["export default \"mat-table {\\n  width: 100%;\\n}\\n\\ni {\\n  height: 16px;\\n  font-size: 22px;\\n  cursor: pointer;\\n}\\n\\n.ar-id {\\n  min-width: 18% !important;\\n}\\n\\n.o-id {\\n  min-width: 8% !important;\\n}\\n\\n.ar-email {\\n  min-width: 30% !important;\\n}\\n\\n.ar-name {\\n  min-width: 19% !important;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3BlbmRpbmctcmVxLWxpc3QuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxXQUFBO0FBQ0o7O0FBRUE7RUFDSSxZQUFBO0VBQ0EsZUFBQTtFQUNBLGVBQUE7QUFDSjs7QUFFQTtFQUNJLHlCQUFBO0FBQ0o7O0FBQ0E7RUFDSSx3QkFBQTtBQUVKOztBQUFBO0VBQ0kseUJBQUE7QUFHSjs7QUFEQTtFQUNDLHlCQUFBO0FBSUQiLCJmaWxlIjoicGVuZGluZy1yZXEtbGlzdC5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIm1hdC10YWJsZSB7XG4gICAgd2lkdGg6IDEwMCU7XG59XG5cbml7XG4gICAgaGVpZ2h0OiAxNnB4O1xuICAgIGZvbnQtc2l6ZTogMjJweDtcbiAgICBjdXJzb3I6IHBvaW50ZXI7XG59XG5cbi5hci1pZHtcbiAgICBtaW4td2lkdGg6IDE4JSAhaW1wb3J0YW50O1xufVxuLm8taWR7XG4gICAgbWluLXdpZHRoOiA4JSAhaW1wb3J0YW50O1xufVxuLmFyLWVtYWlse1xuICAgIG1pbi13aWR0aDogMzAlICFpbXBvcnRhbnQ7XG59XG4uYXItbmFtZXtcblx0bWluLXdpZHRoOiAxOSUgIWltcG9ydGFudDtcbn0iXX0= */\";","import {\n  AfterViewInit,\n  Component,\n  Inject,\n  OnInit,\n  ViewChild,\n  OnDestroy,\n  AfterContentInit,\n} from \"@angular/core\";\nimport { MatPaginator } from \"@angular/material/paginator\";\nimport { MatSort } from \"@angular/material/sort\";\nimport { MatTableDataSource } from \"@angular/material/table\";\nimport { Router } from \"@angular/router\";\nimport { BsModalRef, BsModalService } from \"ngx-bootstrap/modal\";\nimport { DeleteModalComponent } from \"../../../partial/modals/delete-modal/delete-modal.component\";\nimport { GridOption } from \"../../../partial/model/gridOption\";\nimport { AuthService } from \"../../../services/auth.service\";\nimport { HttpReqService } from \"../../../services/http-req.service\";\nimport { Socket } from \"ngx-socket-io\";\n\n@Component({\n  selector: \"app-pending-req-list\",\n  templateUrl: \"./pending-req-list.component.html\",\n  styleUrls: [\"./pending-req-list.component.scss\"],\n})\nexport class PendingReqListComponent\n  implements OnInit, AfterContentInit, OnDestroy\n{\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatSort) sort: MatSort;\n\n  public gridOption: GridOption = {\n    pagesize: 10,\n    search: \"\",\n    filter: {},\n    skip: 0,\n    limit: 10,\n    allrecords: false,\n    sortField: \"\",\n    sortOrder: \"\",\n  };\n\n  public dataSource = new MatTableDataSource();\n  public dataSource1 = new MatTableDataSource();\n  public dataSource2 = new MatTableDataSource();\n  public dataSource3 = new MatTableDataSource();\n  public dataSource4 = new MatTableDataSource();\n\n  public logindisplayedColumns: string[] = [\n    \"userDetail.name\",\n    \"userDetail.email\",\n    \"status\",\n    \"action\",\n  ];\n\n  public namedisplayedColumns: string[] = [\n    \"userDetail.name\",\n    \"name\",\n    \"status\",\n    \"action\",\n  ];\n\n  public uniquedevicedisplayedColumns: string[] = [\n    \"userDetail.name\",\n    \"uniqueDevice\",\n    \"status\",\n    \"action\",\n  ];\n\n  public emaildisplayedColumns: string[] = [\n    \"userDetail.email\",\n    \"email\",\n    \"status\",\n    \"action\",\n  ];\n\n  public organizationdisplayedColumns: string[] = [\n    \"userDetail.organizationId\",\n    \"userDetail.organizationname\",\n    \"organizationId\",\n    \"organizationname\",\n    \"status\",\n    \"action\",\n  ];\n\n  public permissionrArr: any = [];\n\n  public field = [\n    \"userDetail.name\",\n    \"userDetail.email\",\n    \"userDetail.organizationId\",\n  ];\n\n  public resultsLength: any;\n\n  public data: any;\n\n  public statusIndex: any;\n\n  public modalRef: BsModalRef;\n\n  public tokenData: any;\n\n  public resellerArr: any = [];\n\n  public isSuperAdmin: boolean = false;\n\n  public activeTabNo: string = \"0\";\n\n  public loading: boolean = false;\n\n  public tabList = [\n    { name: \"User Sign-ups\", tab: 1 },\n    { name: \"Name Changes\", tab: 2 },\n    { name: \"Email Changes\", tab: 3 },\n    { name: \"Organization Changes\", tab: 4 },\n    { name: \"New Device Changes\", tab: 5 },\n  ];\n\n  tab: number = 1;\n\n  constructor(\n    private httpReqService: HttpReqService,\n    private modalService: BsModalService,\n    private authService: AuthService,\n    private router: Router,\n    private socket: Socket\n  ) {}\n\n  ngOnInit(): void {\n    this.loading = true;\n\n    this.dataSource.sort = this.sort;\n    this.dataSource1.sort = this.sort;\n    this.dataSource2.sort = this.sort;\n    this.dataSource3.sort = this.sort;\n    this.dataSource4.sort = this.sort;\n\n    this.gridOption.filter = {\n      status: { $in: [0, 1, 2] },\n      tab: {\n        $and: [{ email: { $ne: null } }, { organizationId: { $ne: null } }],\n      },\n    };\n\n    this.tokenData = this.authService.decodeToken();\n\n    this.tokenData = this.tokenData.user;\n\n    this.getPermissionList();\n\n    this.socket.on(\"approval\", (data) => {\n      if (data) {\n        this.getData();\n      }\n    });\n  }\n\n  onactive(tab) {\n    this.tab = tab;\n    this.paginator.pageIndex = 0;\n    this.gridOption.skip = 0;\n    this.gridOption.limit = 10;\n    this.dataSource.paginator = this.paginator ? this.paginator : null;\n    this.dataSource1.paginator = this.paginator ? this.paginator : null;\n    this.dataSource2.paginator = this.paginator ? this.paginator : null;\n    this.dataSource3.paginator = this.paginator ? this.paginator : null;\n    this.dataSource4.paginator = this.paginator ? this.paginator : null;\n    this.getData();\n  }\n\n  ngAfterContentInit() {\n    this.dataSource.paginator = this.paginator ? this.paginator : null;\n    this.dataSource1.paginator = this.paginator ? this.paginator : null;\n    this.dataSource2.paginator = this.paginator ? this.paginator : null;\n    this.dataSource3.paginator = this.paginator ? this.paginator : null;\n    this.dataSource4.paginator = this.paginator ? this.paginator : null;\n    \n  }\n\n  ngOnDestroy() {\n    /* this.socket.removeListener('approval'); */\n  }\n\n  public async getData() {\n    this.loading = true;\n\n    this.gridOption.sortField = this.sort ? this.sort.active : \"\";\n\n    this.gridOption.sortOrder = this.sort ? this.sort.direction : \"\";\n\n    this.gridOption.filter[\"user_id\"] = this.tokenData._id;\n\n    this.gridOption.filter[\"adminId\"] = this.tokenData._id;\n\n    if (this.tab == 1) {\n      this.gridOption.filter.tab = {\n        $and: [{ email: { $ne: null } }, { organizationId: { $ne: null } }],\n      };\n    } else if (this.tab == 2) {\n      this.gridOption.filter.tab = { $and: [{ name: { $ne: null } }] };\n    } else if (this.tab == 3) {\n      this.gridOption.filter.tab = {\n        $and: [{ email: { $ne: null } }, { organizationId: { $eq: null } }],\n      };\n    } else if (this.tab == 4) {\n      this.gridOption.filter.tab = {\n        $and: [{ email: { $eq: null } }, { organizationId: { $ne: null } }],\n      };\n    } else if (this.tab == 5) {\n      this.gridOption.filter.tab = { $and: [{ uniqueDevice: { $ne: null } }] };\n    }\n\n    const response: any = await this.httpReqService.post(\n      \"approval/list\",\n      this.gridOption,\n      false\n    );\n\n    this.dataSource = new MatTableDataSource(response.items);\n    this.dataSource1 = new MatTableDataSource(response.items);\n    this.dataSource2 = new MatTableDataSource(response.items);\n    this.dataSource3 = new MatTableDataSource(response.items);\n    this.dataSource4 = new MatTableDataSource(response.items);\n\n    this.resultsLength = response.totalCount;\n\n    this.loading = false;\n  }\n\n  public sortChange(): void {\n    this.gridOption.limit = this.paginator.pageSize;\n    this.gridOption.skip = this.paginator.pageSize * this.paginator.pageIndex;\n    this.gridOption.sortField = this.sort.active;\n    this.gridOption.sortOrder = this.sort.direction;\n    this.paginator.pageIndex = 0;\n    this.getData();\n  }\n\n  public pageChange(): void {\n    this.gridOption.limit = this.paginator.pageSize;\n    this.gridOption.skip = this.paginator.pageSize * this.paginator.pageIndex;\n\n    this.getData();\n  }\n\n  public search(event) {\n    let filterValue = event.target.value;\n    if (filterValue) {\n      filterValue = filterValue.trim(); // Remove whitespace\n      filterValue = filterValue.toLowerCase(); // Datasource defaults to lowercase matches\n      this.gridOption.searchfields = this.field;\n    } else {\n      delete this.gridOption.searchfields;\n      filterValue = \"\";\n    }\n    this.gridOption.search = filterValue;\n    this.pagesetUp();\n    this.getData();\n  }\n\n  public delete(data) {\n    const initialState = {\n      title: \"Reject Request\",\n      message: \"Are you sure you want to reject this request?\",\n      list: data,\n    };\n    this.modalRef = this.modalService.show(DeleteModalComponent, {\n      class: \"modal-xl modal-dialog-centered\",\n      initialState,\n      backdrop: \"static\",\n      keyboard: false,\n    });\n    this.modalRef.content.cancleButtonText = \"Cancel\";\n    this.modalRef.content.deleteButtonText = \"Reject\";\n    this.modalRef.content.url = \"approval\";\n    this.modalRef.content.isRejectReq = true;\n    this.modalRef.content.is_status_change = false;\n    this.modalRef.content.response.subscribe((result) => {\n      if (result) {\n        this.getData();\n      }\n    });\n  }\n\n  public pagesetUp() {\n    this.paginator.pageIndex = 0;\n    this.gridOption.limit = this.paginator.pageSize;\n    this.gridOption.skip = this.paginator.pageSize * this.paginator.pageIndex;\n    this.gridOption.sortField = this.sort.active;\n    this.gridOption.sortOrder = this.sort.direction;\n  }\n\n  public changeStatus(e) {\n    const statusValue = e.target.value;\n    if (statusValue == 0 || statusValue == 1 || statusValue == 2) {\n      this.gridOption.filter.status = Number(statusValue);\n    } else {\n      this.gridOption.filter.status = { $in: [0, 1, 2] };\n    }\n    this.pagesetUp();\n    this.getData();\n  }\n\n  public async updateReqStatus(data, statusValue) {\n    const obj = { _id: data._id, status: statusValue };\n\n    if (statusValue === 2) {\n      this.delete(obj);\n    } else {\n      const response: any = await this.httpReqService.put(\"approval\", obj);\n      if (response) {\n        this.router.navigate([\"/user/update\", data.userId]);\n      }\n    }\n  }\n\n  public async getPermissionList() {\n    this.loading = true;\n\n    let user = this.tokenData;\n\n    if (user != null) {\n      if (user.organizationId == null) {\n        this.tabList = [\n          { name: \"Name Changes\", tab: 2 },\n          { name: \"Email Changes\", tab: 3 },\n        ];\n        this.activeTabNo = \"0\";\n        this.isSuperAdmin = true;\n        this.tab=2;\n      }\n    }\n    this.loading = false;\n    this.getData();\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { PendingReqListComponent } from './pending-req-list/pending-req-list.component';\nimport { RouterModule } from '@angular/router';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatSortModule } from '@angular/material/sort';\nimport { MatTableModule } from '@angular/material/table';\nimport { CardModule, GridModule, ButtonModule, ImgModule, SwitchModule, ModalModule, BadgeModule, FormModule, TabsetModule, SpinkitModule } from '@coreui/angular';\nimport { IconModule } from '@coreui/icons-angular';\nimport { NgxTippyModule } from 'ngx-tippy-wrapper';\nimport { GoogleMapsModule } from '@angular/google-maps';\n\n// Ng2-select\nimport { NgSelectModule } from '@ng-select/ng-select';\n\nconst route = [\n  {\n    path: '',\n    data: {\n      title: 'Alerts',\n    },\n    children: [\n      {\n        path: '',\n        redirectTo: 'approval-req',\n      },\n      {\n        path: '',\n        data: {\n          title: '',\n        },\n        component: PendingReqListComponent\n      },\n    ]\n  }\n];\n\n@NgModule({\n  declarations: [\n    PendingReqListComponent\n  ],\n  imports: [\n    CommonModule,\n    RouterModule.forChild(route),\n    CardModule,\n    IconModule,\n    GridModule,\n    FormModule,\n    ButtonModule,\n    ImgModule,\n    MatTableModule,\n    TabsetModule,\n    MatPaginatorModule,\n    MatSortModule,\n    SwitchModule,\n    ModalModule,\n    NgxTippyModule,\n    NgSelectModule,\n    BadgeModule,\n    SpinkitModule,\n  ]\n})\nexport class PendingReqModule { }\n","export default \"<div class=\\\"loading-indicator\\\" *ngIf=\\\"loading\\\">\\n    <c-spinkit [name]=\\\"'bounce'\\\"></c-spinkit>\\n</div>\\n<div class=\\\"fade-in\\\">\\n    <c-card class=\\\"p-0\\\">\\n        <c-card-body class=\\\"p-0\\\">\\n            <c-tabset boxed=\\\"true\\\" [activeTab]='activeTabNo'>\\n\\n                <c-tablist class=\\\"pt-2 px-2\\\">\\n                    <c-tab *ngFor=\\\"let tab of tabList;let index=index;\\\" (click)=\\\"onactive(tab.tab)\\\" >\\n                        {{ tab.name }}\\n                    </c-tab>\\n                </c-tablist>\\n\\n                <c-tab-content>\\n                    <ng-container *ngIf=\\\"!isSuperAdmin\\\">\\n                        <c-tab-pane>\\n                            <c-row class=\\\"mb-3\\\">\\n                                <c-col md=\\\"4\\\">\\n                                    <div class=\\\"input-group\\\">\\n                                        <div class=\\\"input-group-prepend\\\">\\n                                            <span class=\\\"input-group-text\\\"><i class=\\\"cil-search\\\"></i></span>\\n                                        </div>\\n                                        <input cInput placeholder=\\\"Search here...\\\" (input)=\\\"search($event)\\\" />\\n                                    </div>\\n                                </c-col>\\n                                <c-col md=\\\"4\\\">\\n                                    <div class=\\\"input-group d-flex align-items-center\\\">\\n                                        <label class=\\\"mb-0\\\"> Status: &nbsp;</label>\\n                                        <select cSelect id=\\\"select1\\\" (change)=\\\"changeStatus($event)\\\">\\n                                            <option [value]=\\\"'all'\\\" selected>All</option>\\n                                            <option [value]=\\\"0\\\"> Pending</option>\\n                                            <option [value]=\\\"1\\\"> Approved</option>\\n                                            <option [value]=\\\"2\\\"> Rejected</option>\\n                                        </select>\\n                                    </div>\\n                                </c-col>\\n                            </c-row>\\n                            <mat-table #table mat-table [dataSource]=\\\"dataSource\\\" matSort matSortActive=\\\"createdAt\\\"\\n                                matSortDisableClear matSortDirection=\\\"desc\\\" class=\\\"mat-elevation-z8\\\"\\n                                (matSortChange)=\\\"sortChange()\\\">\\n\\n                                <ng-container matColumnDef=\\\"userDetail.name\\\">\\n                                    <mat-header-cell [ngClass]=\\\"'ar-name'\\\" *matHeaderCellDef mat-sort-header>Name\\n                                    </mat-header-cell>\\n                                    <mat-cell [ngClass]=\\\"'ar-name'\\\" *matCellDef=\\\"let element\\\">\\n                                        {{element.name? element.name:element.userDetail.name |titlecase}}\\n                                    </mat-cell>\\n                                </ng-container>\\n\\n                                <ng-container matColumnDef=\\\"userDetail.email\\\">\\n                                    <mat-header-cell [ngClass]=\\\"'ar-email'\\\" *matHeaderCellDef >Email</mat-header-cell>\\n                                    <mat-cell [ngClass]=\\\"'ar-email'\\\" *matCellDef=\\\"let element\\\">\\n                                        {{element.email?element.email:element.userDetail.email}}\\n                                    </mat-cell>\\n                                </ng-container>\\n\\n                                <ng-container matColumnDef=\\\"status\\\">\\n                                    <mat-header-cell *matHeaderCellDef > Status </mat-header-cell>\\n                                    <mat-cell *matCellDef=\\\"let element\\\" class=\\\"status-icon\\\">\\n                                        <c-badge [color]=\\\"'success'\\\" class=\\\"mx-1 px-2 py-1\\\" *ngIf=\\\"element.status == 1\\\">\\n                                            Approved</c-badge>\\n                                        <c-badge [color]=\\\"'danger'\\\" class=\\\"mx-1 px-2 py-1\\\" *ngIf=\\\"element.status == 2\\\">\\n                                            Rejected</c-badge>\\n                                        <c-badge [color]=\\\"'warning'\\\" class=\\\"mx-1 px-2 py-1\\\" *ngIf=\\\"element.status == 0\\\">\\n                                            Pending</c-badge>\\n                                    </mat-cell>\\n                                </ng-container>\\n\\n                                <ng-container matColumnDef=\\\"action\\\">\\n                                    <mat-header-cell *matHeaderCellDef> Action </mat-header-cell>\\n                                    <mat-cell *matCellDef=\\\"let element\\\">\\n                                        <button class=\\\"btn btn-sm btn-success\\\" *ngIf=\\\"element.status == 0\\\"\\n                                            (click)=\\\"updateReqStatus(element,1)\\\">Approve</button>\\n                                        <button class=\\\"btn btn-sm btn-danger\\\" style=\\\"margin-left: 20px;\\\"\\n                                            *ngIf=\\\"element.status == 0\\\"\\n                                            (click)=\\\"updateReqStatus(element,2)\\\">Reject</button>\\n                                    </mat-cell>\\n                                </ng-container>\\n\\n                                <mat-header-row *matHeaderRowDef=\\\"logindisplayedColumns\\\"></mat-header-row>\\n                            \\n                                <mat-row *matRowDef=\\\"let row; columns: logindisplayedColumns;\\\"\\n                                   ></mat-row>\\n                            </mat-table>\\n                            \\n                            <div class=\\\"mat-table__message text-center mt-3\\\" *ngIf=\\\"!resultsLength\\\">No records found\\n                            </div>\\n\\n                            <div class=\\\"mat-table__bottom\\\">\\n                                <mat-paginator [pageSizeOptions]=\\\"[10, 25, 50, 100]\\\" [length]=\\\"resultsLength\\\"\\n                                    [showFirstLastButtons] (page)=\\\"pageChange()\\\">\\n                                </mat-paginator>\\n                            </div>\\n                        </c-tab-pane>\\n                    </ng-container>\\n\\n                    <c-tab-pane>\\n                        <c-row class=\\\"mb-3\\\">\\n                            <c-col md=\\\"4\\\">\\n                                <div class=\\\"input-group\\\">\\n                                    <div class=\\\"input-group-prepend\\\">\\n                                        <span class=\\\"input-group-text\\\"><i class=\\\"cil-search\\\"></i></span>\\n                                    </div>\\n                                    <input cInput placeholder=\\\"Search here...\\\" (input)=\\\"search($event)\\\" />\\n                                </div>\\n                            </c-col>\\n                            <c-col md=\\\"4\\\">\\n                                <div class=\\\"input-group d-flex align-items-center\\\">\\n                                    <label class=\\\"mb-0\\\"> Status: &nbsp;</label>\\n                                    <select cSelect id=\\\"select1\\\" (change)=\\\"changeStatus($event)\\\">\\n                                        <option [value]=\\\"'all'\\\" selected>All</option>\\n                                        <option [value]=\\\"0\\\"> Pending</option>\\n                                        <option [value]=\\\"1\\\"> Approved</option>\\n                                        <option [value]=\\\"2\\\"> Rejected</option>\\n                                    </select>\\n                                </div>\\n                            </c-col>\\n                        </c-row>\\n                        \\n                        <mat-table #table mat-table [dataSource]=\\\"dataSource1\\\" matSort matSortActive=\\\"createdAt\\\"\\n                            matSortDisableClear matSortDirection=\\\"desc\\\" class=\\\"mat-elevation-z8\\\"\\n                            (matSortChange)=\\\"sortChange()\\\">\\n\\n                            <ng-container matColumnDef=\\\"userDetail.name\\\">\\n                                <mat-header-cell [ngClass]=\\\"'ar-name'\\\" *matHeaderCellDef mat-sort-header>Previous Name\\n                                </mat-header-cell>\\n                                <mat-cell [ngClass]=\\\"'ar-name'\\\" *matCellDef=\\\"let element\\\">\\n                                    {{element.userDetail?element.old_name: '-' |titlecase}}\\n                                </mat-cell>\\n                            </ng-container>\\n\\n                            <ng-container matColumnDef=\\\"name\\\">\\n                                <mat-header-cell [ngClass]=\\\"'ar-name'\\\" *matHeaderCellDef>Updated Name</mat-header-cell>\\n                                <mat-cell [ngClass]=\\\"'ar-name'\\\" *matCellDef=\\\"let element\\\">\\n                                    {{element.name? element.name:'-' |titlecase}}\\n                                </mat-cell>\\n                            </ng-container>\\n\\n                            <ng-container matColumnDef=\\\"status\\\">\\n                                <mat-header-cell *matHeaderCellDef> Status </mat-header-cell>\\n                                <mat-cell *matCellDef=\\\"let element\\\" class=\\\"status-icon\\\">\\n                                    <c-badge [color]=\\\"'success'\\\" class=\\\"mx-1 px-2 py-1\\\" *ngIf=\\\"element.status == 1\\\">\\n                                        Approved</c-badge>\\n                                    <c-badge [color]=\\\"'danger'\\\" class=\\\"mx-1 px-2 py-1\\\" *ngIf=\\\"element.status == 2\\\">\\n                                        Rejected</c-badge>\\n                                    <c-badge [color]=\\\"'warning'\\\" class=\\\"mx-1 px-2 py-1\\\" *ngIf=\\\"element.status == 0\\\">\\n                                        Pending</c-badge>\\n                                </mat-cell>\\n                            </ng-container>\\n\\n                            <ng-container matColumnDef=\\\"action\\\">\\n                                <mat-header-cell *matHeaderCellDef> Action </mat-header-cell>\\n                                <mat-cell *matCellDef=\\\"let element\\\">\\n                                    <button class=\\\"btn btn-sm btn-success\\\" *ngIf=\\\"element.status == 0\\\"\\n                                        (click)=\\\"updateReqStatus(element,1)\\\">Approve</button>\\n                                    <button class=\\\"btn btn-sm btn-danger\\\" style=\\\"margin-left: 20px;\\\"\\n                                        *ngIf=\\\"element.status == 0\\\" (click)=\\\"updateReqStatus(element,2)\\\">Reject</button>\\n                                </mat-cell>\\n                            </ng-container>\\n\\n                            <mat-header-row *matHeaderRowDef=\\\"namedisplayedColumns\\\"></mat-header-row>\\n                            <mat-row *matRowDef=\\\"let row; columns: namedisplayedColumns;\\\" >\\n                            </mat-row>\\n                        </mat-table>\\n                        <div class=\\\"mat-table__message text-center mt-3\\\" *ngIf=\\\"!resultsLength\\\">No records found</div>\\n                        <div class=\\\"mat-table__bottom\\\">\\n                            <mat-paginator [pageSizeOptions]=\\\"[10, 25, 50, 100]\\\" [length]=\\\"resultsLength\\\"\\n                                [showFirstLastButtons] (page)=\\\"pageChange()\\\">\\n                            </mat-paginator>\\n                        </div>\\n                    </c-tab-pane>\\n\\n                    <c-tab-pane>\\n                        <c-row class=\\\"mb-3\\\">\\n                            <c-col md=\\\"4\\\">\\n                                <div class=\\\"input-group\\\">\\n                                    <div class=\\\"input-group-prepend\\\">\\n                                        <span class=\\\"input-group-text\\\"><i class=\\\"cil-search\\\"></i></span>\\n                                    </div>\\n                                    <input cInput placeholder=\\\"Search here...\\\" (input)=\\\"search($event)\\\" />\\n                                </div>\\n                            </c-col>\\n                            <c-col md=\\\"4\\\">\\n                                <div class=\\\"input-group d-flex align-items-center\\\">\\n                                    <label class=\\\"mb-0\\\"> Status: &nbsp;</label>\\n                                    <select cSelect id=\\\"select1\\\" (change)=\\\"changeStatus($event)\\\">\\n                                        <option [value]=\\\"'all'\\\" selected>All</option>\\n                                        <option [value]=\\\"0\\\"> Pending</option>\\n                                        <option [value]=\\\"1\\\"> Approved</option>\\n                                        <option [value]=\\\"2\\\"> Rejected</option>\\n                                    </select>\\n                                </div>\\n                            </c-col>\\n                        </c-row>\\n                        <mat-table #table mat-table [dataSource]=\\\"dataSource2\\\" matSort matSortActive=\\\"createdAt\\\"\\n                            matSortDisableClear matSortDirection=\\\"desc\\\" class=\\\"mat-elevation-z8\\\"\\n                            (matSortChange)=\\\"sortChange()\\\">\\n\\n                            <ng-container matColumnDef=\\\"userDetail.email\\\">\\n                                <mat-header-cell [ngClass]=\\\"'ar-email'\\\" *matHeaderCellDef>Previous Email ID\\n                                </mat-header-cell>\\n                                <mat-cell [ngClass]=\\\"'ar-email'\\\" *matCellDef=\\\"let element\\\">\\n                                    {{element.userDetail?element.old_email:'-'}}\\n                                </mat-cell>\\n                            </ng-container>\\n\\n                            <ng-container matColumnDef=\\\"email\\\">\\n                                <mat-header-cell [ngClass]=\\\"'ar-email'\\\" *matHeaderCellDef mat-sort-header>Updated Email\\n                                    ID </mat-header-cell>\\n                                <mat-cell [ngClass]=\\\"'ar-email'\\\" *matCellDef=\\\"let element\\\">\\n                                    {{element.email?element.email:'-'}}\\n                                </mat-cell>\\n                            </ng-container>\\n\\n                            <ng-container matColumnDef=\\\"status\\\">\\n                                <mat-header-cell *matHeaderCellDef> Status </mat-header-cell>\\n                                <mat-cell *matCellDef=\\\"let element\\\" class=\\\"status-icon\\\">\\n                                    <c-badge [color]=\\\"'success'\\\" class=\\\"mx-1 px-2 py-1\\\" *ngIf=\\\"element.status == 1\\\">\\n                                        Approved</c-badge>\\n                                    <c-badge [color]=\\\"'danger'\\\" class=\\\"mx-1 px-2 py-1\\\" *ngIf=\\\"element.status == 2\\\">\\n                                        Rejected</c-badge>\\n                                    <c-badge [color]=\\\"'warning'\\\" class=\\\"mx-1 px-2 py-1\\\" *ngIf=\\\"element.status == 0\\\">\\n                                        Pending</c-badge>\\n                                </mat-cell>\\n                            </ng-container>\\n\\n                            <ng-container matColumnDef=\\\"action\\\">\\n                                <mat-header-cell *matHeaderCellDef> Action </mat-header-cell>\\n                                <mat-cell *matCellDef=\\\"let element\\\">\\n                                    <button class=\\\"btn btn-sm btn-success\\\" *ngIf=\\\"element.status == 0\\\"\\n                                        (click)=\\\"updateReqStatus(element,1)\\\">Approve</button>\\n                                    <button class=\\\"btn btn-sm btn-danger\\\" style=\\\"margin-left: 20px;\\\"\\n                                        *ngIf=\\\"element.status == 0\\\" (click)=\\\"updateReqStatus(element,2)\\\">Reject</button>\\n                                </mat-cell>\\n                            </ng-container>\\n\\n                            <mat-header-row *matHeaderRowDef=\\\"emaildisplayedColumns\\\"></mat-header-row>\\n                            <mat-row *matRowDef=\\\"let row; columns: emaildisplayedColumns;\\\"\\n                                ></mat-row>\\n                        </mat-table>\\n                        <div class=\\\"mat-table__message text-center mt-3\\\" *ngIf=\\\"!resultsLength\\\">No records found</div>\\n                        <div class=\\\"mat-table__bottom\\\">\\n                            <mat-paginator [pageSizeOptions]=\\\"[10, 25, 50, 100]\\\" [length]=\\\"resultsLength\\\"\\n                                [showFirstLastButtons] (page)=\\\"pageChange()\\\">\\n                            </mat-paginator>\\n                        </div>\\n                    </c-tab-pane>\\n\\n                    <ng-container *ngIf=\\\"!isSuperAdmin\\\">\\n                        <c-tab-pane>\\n                            <c-row class=\\\"mb-3\\\">\\n                                <c-col md=\\\"4\\\">\\n                                    <div class=\\\"input-group\\\">\\n                                        <div class=\\\"input-group-prepend\\\">\\n                                            <span class=\\\"input-group-text\\\"><i class=\\\"cil-search\\\"></i></span>\\n                                        </div>\\n                                        <input cInput placeholder=\\\"Search here...\\\" (input)=\\\"search($event)\\\" />\\n                                    </div>\\n                                </c-col>\\n                                <c-col md=\\\"4\\\">\\n                                    <div class=\\\"input-group d-flex align-items-center\\\">\\n                                        <label class=\\\"mb-0\\\"> Status: &nbsp;</label>\\n                                        <select cSelect id=\\\"select1\\\" (change)=\\\"changeStatus($event)\\\">\\n                                            <option [value]=\\\"'all'\\\" selected>All</option>\\n                                            <option [value]=\\\"0\\\"> Pending</option>\\n                                            <option [value]=\\\"1\\\"> Approved</option>\\n                                            <option [value]=\\\"2\\\"> Rejected</option>\\n                                        </select>\\n                                    </div>\\n                                </c-col>\\n                            </c-row>\\n                            <mat-table #table mat-table [dataSource]=\\\"dataSource3\\\" matSort matSortActive=\\\"createdAt\\\"\\n                                matSortDisableClear matSortDirection=\\\"desc\\\" class=\\\"mat-elevation-z8\\\"\\n                                (matSortChange)=\\\"sortChange()\\\">\\n\\n                                <ng-container matColumnDef=\\\"userDetail.organizationId\\\">\\n                                    <mat-header-cell [ngClass]=\\\"'o-id'\\\" *matHeaderCellDef mat-sort-header>Previous ID\\n                                    </mat-header-cell>\\n                                    <mat-cell [ngClass]=\\\"'o-id'\\\" *matCellDef=\\\"let element\\\">\\n                                        {{element.userDetail?element.old_organizationId:'-'}}\\n                                    </mat-cell>\\n                                </ng-container>\\n\\n                                <ng-container matColumnDef=\\\"userDetail.organizationname\\\">\\n                                    <mat-header-cell [ngClass]=\\\"'ar-name'\\\" *matHeaderCellDef>Previous Organization\\n                                    </mat-header-cell>\\n                                    <mat-cell [ngClass]=\\\"'ar-name'\\\" *matCellDef=\\\"let element\\\">\\n\\n                                    </mat-cell>\\n                                </ng-container>\\n\\n                                <ng-container matColumnDef=\\\"organizationId\\\">\\n                                    <mat-header-cell [ngClass]=\\\"'o-id'\\\" *matHeaderCellDef mat-sort-header>Updated ID\\n                                    </mat-header-cell>\\n                                    <mat-cell [ngClass]=\\\"'o-id'\\\" *matCellDef=\\\"let element\\\">\\n                                        {{element.organizationId?element.organizationId:'-'}}\\n                                    </mat-cell>\\n                                </ng-container>\\n\\n                                <ng-container matColumnDef=\\\"organizationname\\\">\\n                                    <mat-header-cell [ngClass]=\\\"'ar-name'\\\" *matHeaderCellDef mat-sort-header>Updated\\n                                        Organization</mat-header-cell>\\n                                    <mat-cell [ngClass]=\\\"'ar-name'\\\" *matCellDef=\\\"let element\\\">\\n\\n                                    </mat-cell>\\n                                </ng-container>\\n\\n                                <ng-container matColumnDef=\\\"status\\\">\\n                                    <mat-header-cell *matHeaderCellDef> Status </mat-header-cell>\\n                                    <mat-cell *matCellDef=\\\"let element\\\" class=\\\"status-icon\\\">\\n                                        <c-badge [color]=\\\"'success'\\\" class=\\\"mx-1 px-2 py-1\\\" *ngIf=\\\"element.status == 1\\\">\\n                                            Approved</c-badge>\\n                                        <c-badge [color]=\\\"'danger'\\\" class=\\\"mx-1 px-2 py-1\\\" *ngIf=\\\"element.status == 2\\\">\\n                                            Rejected</c-badge>\\n                                        <c-badge [color]=\\\"'warning'\\\" class=\\\"mx-1 px-2 py-1\\\" *ngIf=\\\"element.status == 0\\\">\\n                                            Pending</c-badge>\\n                                    </mat-cell>\\n                                </ng-container>\\n\\n                                <ng-container matColumnDef=\\\"action\\\">\\n                                    <mat-header-cell *matHeaderCellDef> Action </mat-header-cell>\\n                                    <mat-cell *matCellDef=\\\"let element\\\">\\n                                        <button class=\\\"btn btn-sm btn-success\\\" *ngIf=\\\"element.status == 0\\\"\\n                                            (click)=\\\"updateReqStatus(element,1)\\\">Approve</button>\\n                                        <button class=\\\"btn btn-sm btn-danger\\\" style=\\\"margin-left: 20px;\\\"\\n                                            *ngIf=\\\"element.status == 0\\\"\\n                                            (click)=\\\"updateReqStatus(element,2)\\\">Reject</button>\\n                                    </mat-cell>\\n                                </ng-container>\\n\\n                                <mat-header-row *matHeaderRowDef=\\\"organizationdisplayedColumns\\\"></mat-header-row>\\n                                <mat-row *matRowDef=\\\"let row; columns: organizationdisplayedColumns;\\\"\\n                                    ></mat-row>\\n                            </mat-table>\\n                            <div class=\\\"mat-table__message text-center mt-3\\\" *ngIf=\\\"!resultsLength\\\">No records found\\n                            </div>\\n                            <div class=\\\"mat-table__bottom\\\">\\n                                <mat-paginator [pageSizeOptions]=\\\"[10, 25, 50, 100]\\\" [length]=\\\"resultsLength\\\"\\n                                    [showFirstLastButtons] (page)=\\\"pageChange()\\\">\\n                                </mat-paginator>\\n                            </div>\\n                        </c-tab-pane>\\n\\n                        <c-tab-pane>\\n                            <c-row class=\\\"mb-3\\\">\\n                                <c-col md=\\\"4\\\">\\n                                    <div class=\\\"input-group\\\">\\n                                        <div class=\\\"input-group-prepend\\\">\\n                                            <span class=\\\"input-group-text\\\"><i class=\\\"cil-search\\\"></i></span>\\n                                        </div>\\n                                        <input cInput placeholder=\\\"Search here...\\\" (input)=\\\"search($event)\\\" />\\n                                    </div>\\n                                </c-col>\\n                                <c-col md=\\\"4\\\">\\n                                    <div class=\\\"input-group d-flex align-items-center\\\">\\n                                        <label class=\\\"mb-0\\\"> Status: &nbsp;</label>\\n                                        <select cSelect id=\\\"select1\\\" (change)=\\\"changeStatus($event)\\\">\\n                                            <option [value]=\\\"'all'\\\" selected>All</option>\\n                                            <option [value]=\\\"0\\\"> Pending</option>\\n                                            <option [value]=\\\"1\\\"> Approved</option>\\n                                            <option [value]=\\\"2\\\"> Rejected</option>\\n                                        </select>\\n                                    </div>\\n                                </c-col>\\n                            </c-row>\\n                            <mat-table #table mat-table [dataSource]=\\\"dataSource4\\\" matSort matSortActive=\\\"createdAt\\\"\\n                                matSortDisableClear matSortDirection=\\\"desc\\\" class=\\\"mat-elevation-z8\\\"\\n                                (matSortChange)=\\\"sortChange()\\\">\\n\\n                                <ng-container matColumnDef=\\\"userDetail.name\\\">\\n                                    <mat-header-cell [ngClass]=\\\"'ar-name'\\\" *matHeaderCellDef mat-sort-header>Name\\n                                    </mat-header-cell>\\n                                    <mat-cell [ngClass]=\\\"'ar-name'\\\" *matCellDef=\\\"let element\\\">\\n                                        {{element.name? element.name:element.userDetail.name |titlecase}}\\n                                    </mat-cell>\\n                                </ng-container>\\n\\n                                <ng-container matColumnDef=\\\"uniqueDevice\\\">\\n                                    <mat-header-cell [ngClass]=\\\"'ar-name'\\\" *matHeaderCellDef>Unique Device\\n                                    </mat-header-cell>\\n                                    <mat-cell [ngClass]=\\\"'ar-name'\\\" *matCellDef=\\\"let element\\\">\\n                                        {{element.uniqueDevice? element.uniqueDevice:'-'}}\\n                                    </mat-cell>\\n                                </ng-container>\\n\\n                                <ng-container matColumnDef=\\\"status\\\">\\n                                    <mat-header-cell *matHeaderCellDef> Status </mat-header-cell>\\n                                    <mat-cell *matCellDef=\\\"let element\\\" class=\\\"status-icon\\\">\\n                                        <c-badge [color]=\\\"'success'\\\" class=\\\"mx-1 px-2 py-1\\\" *ngIf=\\\"element.status == 1\\\">\\n                                            Approved</c-badge>\\n                                        <c-badge [color]=\\\"'danger'\\\" class=\\\"mx-1 px-2 py-1\\\" *ngIf=\\\"element.status == 2\\\">\\n                                            Rejected</c-badge>\\n                                        <c-badge [color]=\\\"'warning'\\\" class=\\\"mx-1 px-2 py-1\\\" *ngIf=\\\"element.status == 0\\\">\\n                                            Pending</c-badge>\\n                                    </mat-cell>\\n                                </ng-container>\\n\\n                                <ng-container matColumnDef=\\\"action\\\">\\n                                    <mat-header-cell *matHeaderCellDef> Action </mat-header-cell>\\n                                    <mat-cell *matCellDef=\\\"let element\\\">\\n                                        <button class=\\\"btn btn-sm btn-success\\\" *ngIf=\\\"element.status == 0\\\"\\n                                            (click)=\\\"updateReqStatus(element,1)\\\">Approve</button>\\n                                        <button class=\\\"btn btn-sm btn-danger\\\" style=\\\"margin-left: 20px;\\\"\\n                                            *ngIf=\\\"element.status == 0\\\"\\n                                            (click)=\\\"updateReqStatus(element,2)\\\">Reject</button>\\n                                    </mat-cell>\\n                                </ng-container>\\n\\n                                <mat-header-row *matHeaderRowDef=\\\"uniquedevicedisplayedColumns\\\"></mat-header-row>\\n                                <mat-row *matRowDef=\\\"let row; columns: uniquedevicedisplayedColumns;\\\"\\n                                    ></mat-row>\\n                            </mat-table>\\n                            <div class=\\\"mat-table__message text-center mt-3\\\" *ngIf=\\\"!resultsLength\\\">No records found\\n                            </div>\\n                            <div class=\\\"mat-table__bottom\\\">\\n                                <mat-paginator [pageSizeOptions]=\\\"[10, 25, 50, 100]\\\" [length]=\\\"resultsLength\\\"\\n                                    [showFirstLastButtons] (page)=\\\"pageChange()\\\">\\n                                </mat-paginator>\\n                            </div>\\n                        </c-tab-pane>\\n                    </ng-container>\\n\\n                </c-tab-content>\\n            </c-tabset>\\n        </c-card-body>\\n    </c-card>\\n</div>\\n\\n<!--<div class=\\\"fade-in\\\">\\n    <c-card>\\n        <c-card-header class=\\\"d-flex align-items-center\\\">\\n            <h4 class=\\\"mb-0\\\">Approval Requests List</h4>\\n        </c-card-header>\\n        <c-card-body>\\n            <c-row class=\\\"mb-3\\\">\\n                <c-col md=\\\"4\\\">\\n                    <div class=\\\"input-group\\\">\\n                        <div class=\\\"input-group-prepend\\\">\\n                            <span class=\\\"input-group-text\\\"><i class=\\\"cil-search\\\"></i></span>\\n                        </div>\\n                        <input cInput placeholder=\\\"Search here...\\\" (input)=\\\"search($event)\\\" />\\n                    </div>\\n                </c-col>\\n                <c-col md=\\\"4\\\">\\n                    <div class=\\\"input-group d-flex align-items-center\\\">\\n                        <label class=\\\"mb-0\\\"> Status: &nbsp;</label>\\n                        <select cSelect id=\\\"select1\\\" (change)=\\\"changeStatus($event)\\\">\\n                            <option [value]=\\\"'all'\\\" selected>All</option>\\n                            <option [value]=\\\"0\\\"> Pending</option>\\n                            <option [value]=\\\"1\\\"> Approved</option>\\n                            <option [value]=\\\"2\\\"> Rejected</option>\\n                        </select>\\n                    </div>\\n                </c-col>\\n            </c-row>\\n            <mat-table #table mat-table [dataSource]=\\\"dataSource\\\" matSort matSortActive=\\\"createdAt\\\" matSortDisableClear\\n                matSortDirection=\\\"desc\\\" class=\\\"mat-elevation-z8\\\" (matSortChange)=\\\"sortChange()\\\">\\n\\n                <ng-container matColumnDef=\\\"userDetail.name\\\">\\n                    <mat-header-cell *matHeaderCellDef mat-sort-header>Old Name </mat-header-cell>\\n                    <mat-cell *matCellDef=\\\"let element\\\">\\n                        {{element.userDetail?element.userDetail.name: '-' |titlecase}}\\n                    </mat-cell>\\n                </ng-container>\\n\\n\\n                <ng-container matColumnDef=\\\"userDetail.email\\\">\\n                    <mat-header-cell *matHeaderCellDef>Old Email </mat-header-cell>\\n                    <mat-cell *matCellDef=\\\"let element\\\">\\n                        {{element.userDetail?element.userDetail.email:'-'}}\\n                    </mat-cell>\\n                </ng-container>\\n\\n\\n                <ng-container matColumnDef=\\\"userDetail.organizationId\\\">\\n                    <mat-header-cell *matHeaderCellDef mat-sort-header>Old Organization Id</mat-header-cell>\\n                    <mat-cell *matCellDef=\\\"let element\\\"> {{element.userDetail?element.userDetail.organizationId:'-'}}\\n                    </mat-cell>\\n                </ng-container>\\n\\n                <ng-container matColumnDef=\\\"name\\\">\\n                    <mat-header-cell *matHeaderCellDef mat-sort-header>Name </mat-header-cell>\\n                    <mat-cell *matCellDef=\\\"let element\\\"> {{element.name? element.name:'-' |titlecase}}\\n                    </mat-cell>\\n                </ng-container>\\n                <ng-container matColumnDef=\\\"email\\\">\\n                    <mat-header-cell *matHeaderCellDef mat-sort-header>Email </mat-header-cell>\\n                    <mat-cell *matCellDef=\\\"let element\\\"> {{element.email?element.email:'-'}}\\n                    </mat-cell>\\n                </ng-container>\\n                <ng-container matColumnDef=\\\"organizationId\\\">\\n                    <mat-header-cell *matHeaderCellDef mat-sort-header>Organization Id </mat-header-cell>\\n                    <mat-cell *matCellDef=\\\"let element\\\"> {{element.organizationId?element.organizationId:'-'}}\\n                    </mat-cell>\\n                </ng-container>\\n\\n                <ng-container matColumnDef=\\\"status\\\">\\n                    <mat-header-cell *matHeaderCellDef> Status </mat-header-cell>\\n                    <mat-cell *matCellDef=\\\"let element\\\" class=\\\"status-icon\\\">\\n                        <c-badge [color]=\\\"'success'\\\" class=\\\"mx-1 px-2 py-1\\\" *ngIf=\\\"element.status == 1\\\">\\n                            Approved</c-badge>\\n                        <c-badge [color]=\\\"'danger'\\\" class=\\\"mx-1 px-2 py-1\\\" *ngIf=\\\"element.status == 2\\\">\\n                            Rejected</c-badge>\\n                        <c-badge [color]=\\\"'warning'\\\" class=\\\"mx-1 px-2 py-1\\\" *ngIf=\\\"element.status == 0\\\">\\n                            Pending</c-badge>\\n                    </mat-cell>\\n                </ng-container>\\n\\n                <ng-container matColumnDef=\\\"action\\\">\\n                    <mat-header-cell *matHeaderCellDef> Action </mat-header-cell>\\n                    <mat-cell *matCellDef=\\\"let element\\\">\\n                        <button class=\\\"btn btn-block btn-sm btn-success\\\" *ngIf=\\\"element.status == 0\\\"\\n                            (click)=\\\"updateReqStatus(element,1)\\\">Approve</button>\\n                        <button class=\\\"btn btn-block btn-sm btn-danger\\\" *ngIf=\\\"element.status == 0\\\"\\n                            (click)=\\\"updateReqStatus(element,2)\\\">Reject</button>\\n                    </mat-cell>\\n                </ng-container>\\n\\n                <mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></mat-header-row>\\n                <mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></mat-row>\\n            </mat-table>\\n            <div class=\\\"mat-table__message text-center mt-3\\\" *ngIf=\\\"!resultsLength\\\">No records found</div>\\n            <div class=\\\"mat-table__bottom\\\">\\n                <mat-paginator [pageSizeOptions]=\\\"[10, 25, 50, 100]\\\" [length]=\\\"resultsLength\\\" [showFirstLastButtons]\\n                    (page)=\\\"pageChange()\\\">\\n                </mat-paginator>\\n            </div>\\n        </c-card-body>\\n    </c-card>\\n</div>-->\";"],"sourceRoot":"webpack:///"}