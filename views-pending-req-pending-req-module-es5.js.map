{"version":3,"sources":["webpack:///src/app/views/pending-req/pending-req-list/pending-req-list.component.scss","webpack:///src/app/views/pending-req/pending-req-list/pending-req-list.component.ts","webpack:///src/app/views/pending-req/pending-req.module.ts","webpack:///src/app/views/pending-req/pending-req-list/pending-req-list.component.html"],"names":["PendingReqListComponent","httpReqService","modalService","authService","router","socket","gridOption","pagesize","search","filter","skip","limit","allrecords","sortField","sortOrder","dataSource","dataSource1","dataSource2","dataSource3","dataSource4","logindisplayedColumns","namedisplayedColumns","uniquedevicedisplayedColumns","emaildisplayedColumns","organizationdisplayedColumns","permissionrArr","field","resellerArr","isSuperAdmin","activeTabNo","loading","tabList","name","tab","sort","status","$in","$and","email","$ne","organizationId","tokenData","decodeToken","user","getPermissionList","on","data","getData","paginator","pageIndex","active","direction","_id","$eq","uniqueDevice","post","response","items","resultsLength","totalCount","pageSize","event","filterValue","target","value","trim","toLowerCase","searchfields","pagesetUp","initialState","title","message","list","modalRef","show","backdrop","keyboard","content","cancleButtonText","deleteButtonText","url","isRejectReq","is_status_change","subscribe","result","e","statusValue","Number","obj","put","navigate","userId","selector","template","route","path","children","redirectTo","component","PendingReqModule","declarations","imports","forChild"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA;AAAe;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCyBFA,uBAAuB;AAgGlC,yCACUC,cADV,EAEUC,YAFV,EAGUC,WAHV,EAIUC,MAJV,EAKUC,MALV,EAKwB;AAAA;;AAJd,eAAAJ,cAAA,GAAAA,cAAA;AACA,eAAAC,YAAA,GAAAA,YAAA;AACA,eAAAC,WAAA,GAAAA,WAAA;AACA,eAAAC,MAAA,GAAAA,MAAA;AACA,eAAAC,MAAA,GAAAA,MAAA;AA/FH,eAAAC,UAAA,GAAyB;AAC9BC,oBAAQ,EAAE,EADoB;AAE9BC,kBAAM,EAAE,EAFsB;AAG9BC,kBAAM,EAAE,EAHsB;AAI9BC,gBAAI,EAAE,CAJwB;AAK9BC,iBAAK,EAAE,EALuB;AAM9BC,sBAAU,EAAE,KANkB;AAO9BC,qBAAS,EAAE,EAPmB;AAQ9BC,qBAAS,EAAE;AARmB,WAAzB;AAWA,eAAAC,UAAA,GAAa,IAAI,0EAAJ,EAAb;AACA,eAAAC,WAAA,GAAc,IAAI,0EAAJ,EAAd;AACA,eAAAC,WAAA,GAAc,IAAI,0EAAJ,EAAd;AACA,eAAAC,WAAA,GAAc,IAAI,0EAAJ,EAAd;AACA,eAAAC,WAAA,GAAc,IAAI,0EAAJ,EAAd;AAEA,eAAAC,qBAAA,GAAkC,CACvC,iBADuC,EAEvC,kBAFuC,EAGvC,QAHuC,EAIvC,QAJuC,CAAlC;AAOA,eAAAC,oBAAA,GAAiC,CACtC,iBADsC,EAEtC,MAFsC,EAGtC,QAHsC,EAItC,QAJsC,CAAjC;AAOA,eAAAC,4BAAA,GAAyC,CAC9C,iBAD8C,EAE9C,cAF8C,EAG9C,QAH8C,EAI9C,QAJ8C,CAAzC;AAOA,eAAAC,qBAAA,GAAkC,CACvC,kBADuC,EAEvC,OAFuC,EAGvC,QAHuC,EAIvC,QAJuC,CAAlC;AAOA,eAAAC,4BAAA,GAAyC,CAC9C,2BAD8C,EAE9C,6BAF8C,EAG9C,gBAH8C,EAI9C,kBAJ8C,EAK9C,QAL8C,EAM9C,QAN8C,CAAzC;AASA,eAAAC,cAAA,GAAsB,EAAtB;AAEA,eAAAC,KAAA,GAAQ,CACb,iBADa,EAEb,kBAFa,EAGb,2BAHa,CAAR;AAgBA,eAAAC,WAAA,GAAmB,EAAnB;AAEA,eAAAC,YAAA,GAAwB,KAAxB;AAEA,eAAAC,WAAA,GAAsB,GAAtB;AAEA,eAAAC,OAAA,GAAmB,KAAnB;AAEA,eAAAC,OAAA,GAAU,CACf;AAAEC,gBAAI,EAAE,eAAR;AAAyBC,eAAG,EAAE;AAA9B,WADe,EAEf;AAAED,gBAAI,EAAE,cAAR;AAAwBC,eAAG,EAAE;AAA7B,WAFe,EAGf;AAAED,gBAAI,EAAE,eAAR;AAAyBC,eAAG,EAAE;AAA9B,WAHe,EAIf;AAAED,gBAAI,EAAE,sBAAR;AAAgCC,eAAG,EAAE;AAArC,WAJe,EAKf;AAAED,gBAAI,EAAE,oBAAR;AAA8BC,eAAG,EAAE;AAAnC,WALe,CAAV;AAQP,eAAAA,GAAA,GAAc,CAAd;AAQI;;AAtG8B;AAAA;AAAA,iBAwGlC,oBAAQ;AAAA;;AACN,iBAAKH,OAAL,GAAe,IAAf;AAEA,iBAAKf,UAAL,CAAgBmB,IAAhB,GAAuB,KAAKA,IAA5B;AACA,iBAAKlB,WAAL,CAAiBkB,IAAjB,GAAwB,KAAKA,IAA7B;AACA,iBAAKjB,WAAL,CAAiBiB,IAAjB,GAAwB,KAAKA,IAA7B;AACA,iBAAKhB,WAAL,CAAiBgB,IAAjB,GAAwB,KAAKA,IAA7B;AACA,iBAAKf,WAAL,CAAiBe,IAAjB,GAAwB,KAAKA,IAA7B;AAEA,iBAAK5B,UAAL,CAAgBG,MAAhB,GAAyB;AACvB0B,oBAAM,EAAE;AAAEC,mBAAG,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP;AAAP,eADe;AAEvBH,iBAAG,EAAE;AACHI,oBAAI,EAAE,CAAC;AAAEC,uBAAK,EAAE;AAAEC,uBAAG,EAAE;AAAP;AAAT,iBAAD,EAA2B;AAAEC,gCAAc,EAAE;AAAED,uBAAG,EAAE;AAAP;AAAlB,iBAA3B;AADH;AAFkB,aAAzB;AAOA,iBAAKE,SAAL,GAAiB,KAAKtC,WAAL,CAAiBuC,WAAjB,EAAjB;AAEA,iBAAKD,SAAL,GAAiB,KAAKA,SAAL,CAAeE,IAAhC;AAEA,iBAAKC,iBAAL;AAEA,iBAAKvC,MAAL,CAAYwC,EAAZ,CAAe,UAAf,EAA2B,UAACC,IAAD,EAAU;AACnC,kBAAIA,IAAJ,EAAU;AACR,qBAAI,CAACC,OAAL;AACD;AACF,aAJD;AAKD;AAnIiC;AAAA;AAAA,iBAqIlC,kBAASd,GAAT,EAAc;AACZ,iBAAKA,GAAL,GAAWA,GAAX;AACA,iBAAKe,SAAL,CAAeC,SAAf,GAA2B,CAA3B;AACA,iBAAK3C,UAAL,CAAgBI,IAAhB,GAAuB,CAAvB;AACA,iBAAKJ,UAAL,CAAgBK,KAAhB,GAAwB,EAAxB;AACA,iBAAKI,UAAL,CAAgBiC,SAAhB,GAA4B,KAAKA,SAAL,GAAiB,KAAKA,SAAtB,GAAkC,IAA9D;AACA,iBAAKhC,WAAL,CAAiBgC,SAAjB,GAA6B,KAAKA,SAAL,GAAiB,KAAKA,SAAtB,GAAkC,IAA/D;AACA,iBAAK/B,WAAL,CAAiB+B,SAAjB,GAA6B,KAAKA,SAAL,GAAiB,KAAKA,SAAtB,GAAkC,IAA/D;AACA,iBAAK9B,WAAL,CAAiB8B,SAAjB,GAA6B,KAAKA,SAAL,GAAiB,KAAKA,SAAtB,GAAkC,IAA/D;AACA,iBAAK7B,WAAL,CAAiB6B,SAAjB,GAA6B,KAAKA,SAAL,GAAiB,KAAKA,SAAtB,GAAkC,IAA/D;AACA,iBAAKD,OAAL;AACD;AAhJiC;AAAA;AAAA,iBAkJlC,8BAAqB;AACnB,iBAAKhC,UAAL,CAAgBiC,SAAhB,GAA4B,KAAKA,SAAL,GAAiB,KAAKA,SAAtB,GAAkC,IAA9D;AACA,iBAAKhC,WAAL,CAAiBgC,SAAjB,GAA6B,KAAKA,SAAL,GAAiB,KAAKA,SAAtB,GAAkC,IAA/D;AACA,iBAAK/B,WAAL,CAAiB+B,SAAjB,GAA6B,KAAKA,SAAL,GAAiB,KAAKA,SAAtB,GAAkC,IAA/D;AACA,iBAAK9B,WAAL,CAAiB8B,SAAjB,GAA6B,KAAKA,SAAL,GAAiB,KAAKA,SAAtB,GAAkC,IAA/D;AACA,iBAAK7B,WAAL,CAAiB6B,SAAjB,GAA6B,KAAKA,SAAL,GAAiB,KAAKA,SAAtB,GAAkC,IAA/D;AAED;AAzJiC;AAAA;AAAA,iBA2JlC,uBAAc;AACZ;AACD;AA7JiC;AAAA;AAAA,iBA+JrB,mBAAU;;;;;;;AACrB,2BAAKlB,OAAL,GAAe,IAAf;AAEA,2BAAKxB,UAAL,CAAgBO,SAAhB,GAA4B,KAAKqB,IAAL,GAAY,KAAKA,IAAL,CAAUgB,MAAtB,GAA+B,EAA3D;AAEA,2BAAK5C,UAAL,CAAgBQ,SAAhB,GAA4B,KAAKoB,IAAL,GAAY,KAAKA,IAAL,CAAUiB,SAAtB,GAAkC,EAA9D;AAEA,2BAAK7C,UAAL,CAAgBG,MAAhB,CAAuB,SAAvB,IAAoC,KAAKgC,SAAL,CAAeW,GAAnD;AAEA,2BAAK9C,UAAL,CAAgBG,MAAhB,CAAuB,SAAvB,IAAoC,KAAKgC,SAAL,CAAeW,GAAnD;;AAEA,0BAAI,KAAKnB,GAAL,IAAY,CAAhB,EAAmB;AACjB,6BAAK3B,UAAL,CAAgBG,MAAhB,CAAuBwB,GAAvB,GAA6B;AAC3BI,8BAAI,EAAE,CAAC;AAAEC,iCAAK,EAAE;AAAEC,iCAAG,EAAE;AAAP;AAAT,2BAAD,EAA2B;AAAEC,0CAAc,EAAE;AAAED,iCAAG,EAAE;AAAP;AAAlB,2BAA3B;AADqB,yBAA7B;AAGD,uBAJD,MAIO,IAAI,KAAKN,GAAL,IAAY,CAAhB,EAAmB;AACxB,6BAAK3B,UAAL,CAAgBG,MAAhB,CAAuBwB,GAAvB,GAA6B;AAAEI,8BAAI,EAAE,CAAC;AAAEL,gCAAI,EAAE;AAAEO,iCAAG,EAAE;AAAP;AAAR,2BAAD;AAAR,yBAA7B;AACD,uBAFM,MAEA,IAAI,KAAKN,GAAL,IAAY,CAAhB,EAAmB;AACxB,6BAAK3B,UAAL,CAAgBG,MAAhB,CAAuBwB,GAAvB,GAA6B;AAC3BI,8BAAI,EAAE,CAAC;AAAEC,iCAAK,EAAE;AAAEC,iCAAG,EAAE;AAAP;AAAT,2BAAD,EAA2B;AAAEC,0CAAc,EAAE;AAAEa,iCAAG,EAAE;AAAP;AAAlB,2BAA3B;AADqB,yBAA7B;AAGD,uBAJM,MAIA,IAAI,KAAKpB,GAAL,IAAY,CAAhB,EAAmB;AACxB,6BAAK3B,UAAL,CAAgBG,MAAhB,CAAuBwB,GAAvB,GAA6B;AAC3BI,8BAAI,EAAE,CAAC;AAAEC,iCAAK,EAAE;AAAEe,iCAAG,EAAE;AAAP;AAAT,2BAAD,EAA2B;AAAEb,0CAAc,EAAE;AAAED,iCAAG,EAAE;AAAP;AAAlB,2BAA3B;AADqB,yBAA7B;AAGD,uBAJM,MAIA,IAAI,KAAKN,GAAL,IAAY,CAAhB,EAAmB;AACxB,6BAAK3B,UAAL,CAAgBG,MAAhB,CAAuBwB,GAAvB,GAA6B;AAAEI,8BAAI,EAAE,CAAC;AAAEiB,wCAAY,EAAE;AAAEf,iCAAG,EAAE;AAAP;AAAhB,2BAAD;AAAR,yBAA7B;AACD;;;AAEqB,6BAAM,KAAKtC,cAAL,CAAoBsD,IAApB,CAC1B,eAD0B,EAE1B,KAAKjD,UAFqB,EAG1B,KAH0B,CAAN;;;AAAhBkD,8B;AAMN,2BAAKzC,UAAL,GAAkB,IAAI,0EAAJ,CAAuByC,QAAQ,CAACC,KAAhC,CAAlB;AACA,2BAAKzC,WAAL,GAAmB,IAAI,0EAAJ,CAAuBwC,QAAQ,CAACC,KAAhC,CAAnB;AACA,2BAAKxC,WAAL,GAAmB,IAAI,0EAAJ,CAAuBuC,QAAQ,CAACC,KAAhC,CAAnB;AACA,2BAAKvC,WAAL,GAAmB,IAAI,0EAAJ,CAAuBsC,QAAQ,CAACC,KAAhC,CAAnB;AACA,2BAAKtC,WAAL,GAAmB,IAAI,0EAAJ,CAAuBqC,QAAQ,CAACC,KAAhC,CAAnB;AAEA,2BAAKC,aAAL,GAAqBF,QAAQ,CAACG,UAA9B;AAEA,2BAAK7B,OAAL,GAAe,KAAf;;;;;;;;;AACD;AA3MiC;AAAA;AAAA,iBA6M3B,sBAAU;AACf,iBAAKxB,UAAL,CAAgBK,KAAhB,GAAwB,KAAKqC,SAAL,CAAeY,QAAvC;AACA,iBAAKtD,UAAL,CAAgBI,IAAhB,GAAuB,KAAKsC,SAAL,CAAeY,QAAf,GAA0B,KAAKZ,SAAL,CAAeC,SAAhE;AACA,iBAAK3C,UAAL,CAAgBO,SAAhB,GAA4B,KAAKqB,IAAL,CAAUgB,MAAtC;AACA,iBAAK5C,UAAL,CAAgBQ,SAAhB,GAA4B,KAAKoB,IAAL,CAAUiB,SAAtC;AACA,iBAAKH,SAAL,CAAeC,SAAf,GAA2B,CAA3B;AACA,iBAAKF,OAAL;AACD;AApNiC;AAAA;AAAA,iBAsN3B,sBAAU;AACf,iBAAKzC,UAAL,CAAgBK,KAAhB,GAAwB,KAAKqC,SAAL,CAAeY,QAAvC;AACA,iBAAKtD,UAAL,CAAgBI,IAAhB,GAAuB,KAAKsC,SAAL,CAAeY,QAAf,GAA0B,KAAKZ,SAAL,CAAeC,SAAhE;AAEA,iBAAKF,OAAL;AACD;AA3NiC;AAAA;AAAA,iBA6N3B,gBAAOc,KAAP,EAAc;AACnB,gBAAIC,WAAW,GAAGD,KAAK,CAACE,MAAN,CAAaC,KAA/B;;AACA,gBAAIF,WAAJ,EAAiB;AACfA,yBAAW,GAAGA,WAAW,CAACG,IAAZ,EAAd,CADe,CACmB;;AAClCH,yBAAW,GAAGA,WAAW,CAACI,WAAZ,EAAd,CAFe,CAE0B;;AACzC,mBAAK5D,UAAL,CAAgB6D,YAAhB,GAA+B,KAAKzC,KAApC;AACD,aAJD,MAIO;AACL,qBAAO,KAAKpB,UAAL,CAAgB6D,YAAvB;AACAL,yBAAW,GAAG,EAAd;AACD;;AACD,iBAAKxD,UAAL,CAAgBE,MAAhB,GAAyBsD,WAAzB;AACA,iBAAKM,SAAL;AACA,iBAAKrB,OAAL;AACD;AA1OiC;AAAA;AAAA,iBA4O3B,iBAAOD,IAAP,EAAa;AAAA;;AAClB,gBAAMuB,YAAY,GAAG;AACnBC,mBAAK,EAAE,gBADY;AAEnBC,qBAAO,EAAE,+CAFU;AAGnBC,kBAAI,EAAE1B;AAHa,aAArB;AAKA,iBAAK2B,QAAL,GAAgB,KAAKvE,YAAL,CAAkBwE,IAAlB,CAAuB,wGAAvB,EAA6C;AAC3D,uBAAO,gCADoD;AAE3DL,0BAAY,EAAZA,YAF2D;AAG3DM,sBAAQ,EAAE,QAHiD;AAI3DC,sBAAQ,EAAE;AAJiD,aAA7C,CAAhB;AAMA,iBAAKH,QAAL,CAAcI,OAAd,CAAsBC,gBAAtB,GAAyC,QAAzC;AACA,iBAAKL,QAAL,CAAcI,OAAd,CAAsBE,gBAAtB,GAAyC,QAAzC;AACA,iBAAKN,QAAL,CAAcI,OAAd,CAAsBG,GAAtB,GAA4B,UAA5B;AACA,iBAAKP,QAAL,CAAcI,OAAd,CAAsBI,WAAtB,GAAoC,IAApC;AACA,iBAAKR,QAAL,CAAcI,OAAd,CAAsBK,gBAAtB,GAAyC,KAAzC;AACA,iBAAKT,QAAL,CAAcI,OAAd,CAAsBrB,QAAtB,CAA+B2B,SAA/B,CAAyC,UAACC,MAAD,EAAY;AACnD,kBAAIA,MAAJ,EAAY;AACV,sBAAI,CAACrC,OAAL;AACD;AACF,aAJD;AAKD;AAlQiC;AAAA;AAAA,iBAoQ3B,qBAAY;AACjB,iBAAKC,SAAL,CAAeC,SAAf,GAA2B,CAA3B;AACA,iBAAK3C,UAAL,CAAgBK,KAAhB,GAAwB,KAAKqC,SAAL,CAAeY,QAAvC;AACA,iBAAKtD,UAAL,CAAgBI,IAAhB,GAAuB,KAAKsC,SAAL,CAAeY,QAAf,GAA0B,KAAKZ,SAAL,CAAeC,SAAhE;AACA,iBAAK3C,UAAL,CAAgBO,SAAhB,GAA4B,KAAKqB,IAAL,CAAUgB,MAAtC;AACA,iBAAK5C,UAAL,CAAgBQ,SAAhB,GAA4B,KAAKoB,IAAL,CAAUiB,SAAtC;AACD;AA1QiC;AAAA;AAAA,iBA4Q3B,sBAAakC,CAAb,EAAgB;AACrB,gBAAMC,WAAW,GAAGD,CAAC,CAACtB,MAAF,CAASC,KAA7B;;AACA,gBAAIsB,WAAW,IAAI,CAAf,IAAoBA,WAAW,IAAI,CAAnC,IAAwCA,WAAW,IAAI,CAA3D,EAA8D;AAC5D,mBAAKhF,UAAL,CAAgBG,MAAhB,CAAuB0B,MAAvB,GAAgCoD,MAAM,CAACD,WAAD,CAAtC;AACD,aAFD,MAEO;AACL,mBAAKhF,UAAL,CAAgBG,MAAhB,CAAuB0B,MAAvB,GAAgC;AAAEC,mBAAG,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP;AAAP,eAAhC;AACD;;AACD,iBAAKgC,SAAL;AACA,iBAAKrB,OAAL;AACD;AArRiC;AAAA;AAAA,iBAuRrB,yBAAgBD,IAAhB,EAAsBwC,WAAtB,EAAmC;;;;;;;AACxCE,yB,GAAM;AAAEpC,2BAAG,EAAEN,IAAI,CAACM,GAAZ;AAAiBjB,8BAAM,EAAEmD;AAAzB,uB;;4BAERA,WAAW,KAAK,C;;;;;AAClB,qCAAYE,GAAZ;;;;;;AAEsB,6BAAM,KAAKvF,cAAL,CAAoBwF,GAApB,CAAwB,UAAxB,EAAoCD,GAApC,CAAN;;;AAAhBhC,8B;;AACN,0BAAIA,QAAJ,EAAc;AACZ,6BAAKpD,MAAL,CAAYsF,QAAZ,CAAqB,CAAC,cAAD,EAAiB5C,IAAI,CAAC6C,MAAtB,CAArB;AACD;;;;;;;;;AAEJ;AAlSiC;AAAA;AAAA,iBAoSrB,6BAAoB;;;;;;;AAC/B,2BAAK7D,OAAL,GAAe,IAAf;AAEIa,0B,GAAO,KAAKF,S;;AAEhB,0BAAIE,IAAI,IAAI,IAAZ,EAAkB;AAChB,4BAAIA,IAAI,CAACH,cAAL,IAAuB,IAA3B,EAAiC;AAC/B,+BAAKT,OAAL,GAAe,CACb;AAAEC,gCAAI,EAAE,cAAR;AAAwBC,+BAAG,EAAE;AAA7B,2BADa,EAEb;AAAED,gCAAI,EAAE,eAAR;AAAyBC,+BAAG,EAAE;AAA9B,2BAFa,CAAf;AAIA,+BAAKJ,WAAL,GAAmB,GAAnB;AACA,+BAAKD,YAAL,GAAoB,IAApB;AACA,+BAAKK,GAAL,GAAS,CAAT;AACD;AACF;;AACD,2BAAKH,OAAL,GAAe,KAAf;AACA,2BAAKiB,OAAL;;;;;;;;;AACD;AAtTiC;;AAAA;AAAA,S;;;;gBAR3B;;gBAJY;;gBAGZ;;gBAJA;;gBAMA;;;;;;gBAUN,uD;AAAS,iBAAC,wEAAD;;;gBACT,uD;AAAS,iBAAC,8DAAD;;;AAJC/C,6BAAuB,6DALnC,gEAAU;AACT4F,gBAAQ,EAAE,sBADD;AAETC,gBAAQ,EAAR,mFAFS;;AAAA,OAAV,CAKmC,GAAvB7F,uBAAuB,CAAvB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;eCbb;;;AAGA,UAAM8F,KAAK,GAAG,CACZ;AACEC,YAAI,EAAE,EADR;AAEEjD,YAAI,EAAE;AACJwB,eAAK,EAAE;AADH,SAFR;AAKE0B,gBAAQ,EAAE,CACR;AACED,cAAI,EAAE,EADR;AAEEE,oBAAU,EAAE;AAFd,SADQ,EAKR;AACEF,cAAI,EAAE,EADR;AAEEjD,cAAI,EAAE;AACJwB,iBAAK,EAAE;AADH,WAFR;AAKE4B,mBAAS,EAAE;AALb,SALQ;AALZ,OADY,CAAd;;UA+CaC,gBAAgB;AAAA;AAAA,O;;AAAhBA,sBAAgB,6DAzB5B,+DAAS;AACRC,oBAAY,EAAE,CACZ,oGADY,CADN;AAIRC,eAAO,EAAE,CACP,4DADO,EAEP,6DAAaC,QAAb,CAAsBR,KAAtB,CAFO,EAGP,0DAHO,EAIP,gEAJO,EAKP,0DALO,EAMP,0DANO,EAOP,4DAPO,EAQP,yDARO,EASP,sEATO,EAUP,4DAVO,EAWP,8EAXO,EAYP,oEAZO,EAaP,4DAbO,EAcP,2DAdO,EAeP,iEAfO,EAgBP,oEAhBO,EAiBP,2DAjBO,EAkBP,6DAlBO;AAJD,OAAT,CAyB4B,GAAhBK,gBAAgB,CAAhB;;;;;;;;;;;;;;;;AC9Db;AAAe;;;AAAA","file":"views-pending-req-pending-req-module-es5.js","sourcesContent":["export default \"mat-table {\\n  width: 100%;\\n}\\n\\ni {\\n  height: 16px;\\n  font-size: 22px;\\n  cursor: pointer;\\n}\\n\\n.ar-id {\\n  min-width: 18% !important;\\n}\\n\\n.o-id {\\n  min-width: 8% !important;\\n}\\n\\n.ar-email {\\n  min-width: 30% !important;\\n}\\n\\n.ar-name {\\n  min-width: 19% !important;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3BlbmRpbmctcmVxLWxpc3QuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxXQUFBO0FBQ0o7O0FBRUE7RUFDSSxZQUFBO0VBQ0EsZUFBQTtFQUNBLGVBQUE7QUFDSjs7QUFFQTtFQUNJLHlCQUFBO0FBQ0o7O0FBQ0E7RUFDSSx3QkFBQTtBQUVKOztBQUFBO0VBQ0kseUJBQUE7QUFHSjs7QUFEQTtFQUNDLHlCQUFBO0FBSUQiLCJmaWxlIjoicGVuZGluZy1yZXEtbGlzdC5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIm1hdC10YWJsZSB7XG4gICAgd2lkdGg6IDEwMCU7XG59XG5cbml7XG4gICAgaGVpZ2h0OiAxNnB4O1xuICAgIGZvbnQtc2l6ZTogMjJweDtcbiAgICBjdXJzb3I6IHBvaW50ZXI7XG59XG5cbi5hci1pZHtcbiAgICBtaW4td2lkdGg6IDE4JSAhaW1wb3J0YW50O1xufVxuLm8taWR7XG4gICAgbWluLXdpZHRoOiA4JSAhaW1wb3J0YW50O1xufVxuLmFyLWVtYWlse1xuICAgIG1pbi13aWR0aDogMzAlICFpbXBvcnRhbnQ7XG59XG4uYXItbmFtZXtcblx0bWluLXdpZHRoOiAxOSUgIWltcG9ydGFudDtcbn0iXX0= */\";","import {\n  AfterViewInit,\n  Component,\n  Inject,\n  OnInit,\n  ViewChild,\n  OnDestroy,\n  AfterContentInit,\n} from \"@angular/core\";\nimport { MatPaginator } from \"@angular/material/paginator\";\nimport { MatSort } from \"@angular/material/sort\";\nimport { MatTableDataSource } from \"@angular/material/table\";\nimport { Router } from \"@angular/router\";\nimport { BsModalRef, BsModalService } from \"ngx-bootstrap/modal\";\nimport { DeleteModalComponent } from \"../../../partial/modals/delete-modal/delete-modal.component\";\nimport { GridOption } from \"../../../partial/model/gridOption\";\nimport { AuthService } from \"../../../services/auth.service\";\nimport { HttpReqService } from \"../../../services/http-req.service\";\nimport { Socket } from \"ngx-socket-io\";\n\n@Component({\n  selector: \"app-pending-req-list\",\n  templateUrl: \"./pending-req-list.component.html\",\n  styleUrls: [\"./pending-req-list.component.scss\"],\n})\nexport class PendingReqListComponent\n  implements OnInit, AfterContentInit, OnDestroy\n{\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatSort) sort: MatSort;\n\n  public gridOption: GridOption = {\n    pagesize: 10,\n    search: \"\",\n    filter: {},\n    skip: 0,\n    limit: 10,\n    allrecords: false,\n    sortField: \"\",\n    sortOrder: \"\",\n  };\n\n  public dataSource = new MatTableDataSource();\n  public dataSource1 = new MatTableDataSource();\n  public dataSource2 = new MatTableDataSource();\n  public dataSource3 = new MatTableDataSource();\n  public dataSource4 = new MatTableDataSource();\n\n  public logindisplayedColumns: string[] = [\n    \"userDetail.name\",\n    \"userDetail.email\",\n    \"status\",\n    \"action\",\n  ];\n\n  public namedisplayedColumns: string[] = [\n    \"userDetail.name\",\n    \"name\",\n    \"status\",\n    \"action\",\n  ];\n\n  public uniquedevicedisplayedColumns: string[] = [\n    \"userDetail.name\",\n    \"uniqueDevice\",\n    \"status\",\n    \"action\",\n  ];\n\n  public emaildisplayedColumns: string[] = [\n    \"userDetail.email\",\n    \"email\",\n    \"status\",\n    \"action\",\n  ];\n\n  public organizationdisplayedColumns: string[] = [\n    \"userDetail.organizationId\",\n    \"userDetail.organizationname\",\n    \"organizationId\",\n    \"organizationname\",\n    \"status\",\n    \"action\",\n  ];\n\n  public permissionrArr: any = [];\n\n  public field = [\n    \"userDetail.name\",\n    \"userDetail.email\",\n    \"userDetail.organizationId\",\n  ];\n\n  public resultsLength: any;\n\n  public data: any;\n\n  public statusIndex: any;\n\n  public modalRef: BsModalRef;\n\n  public tokenData: any;\n\n  public resellerArr: any = [];\n\n  public isSuperAdmin: boolean = false;\n\n  public activeTabNo: string = \"0\";\n\n  public loading: boolean = false;\n\n  public tabList = [\n    { name: \"User Sign-ups\", tab: 1 },\n    { name: \"Name Changes\", tab: 2 },\n    { name: \"Email Changes\", tab: 3 },\n    { name: \"Organization Changes\", tab: 4 },\n    { name: \"New Device Changes\", tab: 5 },\n  ];\n\n  tab: number = 1;\n\n  constructor(\n    private httpReqService: HttpReqService,\n    private modalService: BsModalService,\n    private authService: AuthService,\n    private router: Router,\n    private socket: Socket\n  ) {}\n\n  ngOnInit(): void {\n    this.loading = true;\n\n    this.dataSource.sort = this.sort;\n    this.dataSource1.sort = this.sort;\n    this.dataSource2.sort = this.sort;\n    this.dataSource3.sort = this.sort;\n    this.dataSource4.sort = this.sort;\n\n    this.gridOption.filter = {\n      status: { $in: [0, 1, 2] },\n      tab: {\n        $and: [{ email: { $ne: null } }, { organizationId: { $ne: null } }],\n      },\n    };\n\n    this.tokenData = this.authService.decodeToken();\n\n    this.tokenData = this.tokenData.user;\n\n    this.getPermissionList();\n\n    this.socket.on(\"approval\", (data) => {\n      if (data) {\n        this.getData();\n      }\n    });\n  }\n\n  onactive(tab) {\n    this.tab = tab;\n    this.paginator.pageIndex = 0;\n    this.gridOption.skip = 0;\n    this.gridOption.limit = 10;\n    this.dataSource.paginator = this.paginator ? this.paginator : null;\n    this.dataSource1.paginator = this.paginator ? this.paginator : null;\n    this.dataSource2.paginator = this.paginator ? this.paginator : null;\n    this.dataSource3.paginator = this.paginator ? this.paginator : null;\n    this.dataSource4.paginator = this.paginator ? this.paginator : null;\n    this.getData();\n  }\n\n  ngAfterContentInit() {\n    this.dataSource.paginator = this.paginator ? this.paginator : null;\n    this.dataSource1.paginator = this.paginator ? this.paginator : null;\n    this.dataSource2.paginator = this.paginator ? this.paginator : null;\n    this.dataSource3.paginator = this.paginator ? this.paginator : null;\n    this.dataSource4.paginator = this.paginator ? this.paginator : null;\n    \n  }\n\n  ngOnDestroy() {\n    /* this.socket.removeListener('approval'); */\n  }\n\n  public async getData() {\n    this.loading = true;\n\n    this.gridOption.sortField = this.sort ? this.sort.active : \"\";\n\n    this.gridOption.sortOrder = this.sort ? this.sort.direction : \"\";\n\n    this.gridOption.filter[\"user_id\"] = this.tokenData._id;\n\n    this.gridOption.filter[\"adminId\"] = this.tokenData._id;\n\n    if (this.tab == 1) {\n      this.gridOption.filter.tab = {\n        $and: [{ email: { $ne: null } }, { organizationId: { $ne: null } }],\n      };\n    } else if (this.tab == 2) {\n      this.gridOption.filter.tab = { $and: [{ name: { $ne: null } }] };\n    } else if (this.tab == 3) {\n      this.gridOption.filter.tab = {\n        $and: [{ email: { $ne: null } }, { organizationId: { $eq: null } }],\n      };\n    } else if (this.tab == 4) {\n      this.gridOption.filter.tab = {\n        $and: [{ email: { $eq: null } }, { organizationId: { $ne: null } }],\n      };\n    } else if (this.tab == 5) {\n      this.gridOption.filter.tab = { $and: [{ uniqueDevice: { $ne: null } }] };\n    }\n\n    const response: any = await this.httpReqService.post(\n      \"approval/list\",\n      this.gridOption,\n      false\n    );\n\n    this.dataSource = new MatTableDataSource(response.items);\n    this.dataSource1 = new MatTableDataSource(response.items);\n    this.dataSource2 = new MatTableDataSource(response.items);\n    this.dataSource3 = new MatTableDataSource(response.items);\n    this.dataSource4 = new MatTableDataSource(response.items);\n\n    this.resultsLength = response.totalCount;\n\n    this.loading = false;\n  }\n\n  public sortChange(): void {\n    this.gridOption.limit = this.paginator.pageSize;\n    this.gridOption.skip = this.paginator.pageSize * this.paginator.pageIndex;\n    this.gridOption.sortField = this.sort.active;\n    this.gridOption.sortOrder = this.sort.direction;\n    this.paginator.pageIndex = 0;\n    this.getData();\n  }\n\n  public pageChange(): void {\n    this.gridOption.limit = this.paginator.pageSize;\n    this.gridOption.skip = this.paginator.pageSize * this.paginator.pageIndex;\n\n    this.getData();\n  }\n\n  public search(event) {\n    let filterValue = event.target.value;\n    if (filterValue) {\n      filterValue = filterValue.trim(); // Remove whitespace\n      filterValue = filterValue.toLowerCase(); // Datasource defaults to lowercase matches\n      this.gridOption.searchfields = this.field;\n    } else {\n      delete this.gridOption.searchfields;\n      filterValue = \"\";\n    }\n    this.gridOption.search = filterValue;\n    this.pagesetUp();\n    this.getData();\n  }\n\n  public delete(data) {\n    const initialState = {\n      title: \"Reject Request\",\n      message: \"Are you sure you want to reject this request?\",\n      list: data,\n    };\n    this.modalRef = this.modalService.show(DeleteModalComponent, {\n      class: \"modal-xl modal-dialog-centered\",\n      initialState,\n      backdrop: \"static\",\n      keyboard: false,\n    });\n    this.modalRef.content.cancleButtonText = \"Cancel\";\n    this.modalRef.content.deleteButtonText = \"Reject\";\n    this.modalRef.content.url = \"approval\";\n    this.modalRef.content.isRejectReq = true;\n    this.modalRef.content.is_status_change = false;\n    this.modalRef.content.response.subscribe((result) => {\n      if (result) {\n        this.getData();\n      }\n    });\n  }\n\n  public pagesetUp() {\n    this.paginator.pageIndex = 0;\n    this.gridOption.limit = this.paginator.pageSize;\n    this.gridOption.skip = this.paginator.pageSize * this.paginator.pageIndex;\n    this.gridOption.sortField = this.sort.active;\n    this.gridOption.sortOrder = this.sort.direction;\n  }\n\n  public changeStatus(e) {\n    const statusValue = e.target.value;\n    if (statusValue == 0 || statusValue == 1 || statusValue == 2) {\n      this.gridOption.filter.status = Number(statusValue);\n    } else {\n      this.gridOption.filter.status = { $in: [0, 1, 2] };\n    }\n    this.pagesetUp();\n    this.getData();\n  }\n\n  public async updateReqStatus(data, statusValue) {\n    const obj = { _id: data._id, status: statusValue };\n\n    if (statusValue === 2) {\n      this.delete(obj);\n    } else {\n      const response: any = await this.httpReqService.put(\"approval\", obj);\n      if (response) {\n        this.router.navigate([\"/user/update\", data.userId]);\n      }\n    }\n  }\n\n  public async getPermissionList() {\n    this.loading = true;\n\n    let user = this.tokenData;\n\n    if (user != null) {\n      if (user.organizationId == null) {\n        this.tabList = [\n          { name: \"Name Changes\", tab: 2 },\n          { name: \"Email Changes\", tab: 3 },\n        ];\n        this.activeTabNo = \"0\";\n        this.isSuperAdmin = true;\n        this.tab=2;\n      }\n    }\n    this.loading = false;\n    this.getData();\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { PendingReqListComponent } from './pending-req-list/pending-req-list.component';\nimport { RouterModule } from '@angular/router';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatSortModule } from '@angular/material/sort';\nimport { MatTableModule } from '@angular/material/table';\nimport { CardModule, GridModule, ButtonModule, ImgModule, SwitchModule, ModalModule, BadgeModule, FormModule, TabsetModule, SpinkitModule } from '@coreui/angular';\nimport { IconModule } from '@coreui/icons-angular';\nimport { NgxTippyModule } from 'ngx-tippy-wrapper';\nimport { GoogleMapsModule } from '@angular/google-maps';\n\n// Ng2-select\nimport { NgSelectModule } from '@ng-select/ng-select';\n\nconst route = [\n  {\n    path: '',\n    data: {\n      title: 'Alerts',\n    },\n    children: [\n      {\n        path: '',\n        redirectTo: 'approval-req',\n      },\n      {\n        path: '',\n        data: {\n          title: '',\n        },\n        component: PendingReqListComponent\n      },\n    ]\n  }\n];\n\n@NgModule({\n  declarations: [\n    PendingReqListComponent\n  ],\n  imports: [\n    CommonModule,\n    RouterModule.forChild(route),\n    CardModule,\n    IconModule,\n    GridModule,\n    FormModule,\n    ButtonModule,\n    ImgModule,\n    MatTableModule,\n    TabsetModule,\n    MatPaginatorModule,\n    MatSortModule,\n    SwitchModule,\n    ModalModule,\n    NgxTippyModule,\n    NgSelectModule,\n    BadgeModule,\n    SpinkitModule,\n  ]\n})\nexport class PendingReqModule { }\n","export default \"<div class=\\\"loading-indicator\\\" *ngIf=\\\"loading\\\">\\n    <c-spinkit [name]=\\\"'bounce'\\\"></c-spinkit>\\n</div>\\n<div class=\\\"fade-in\\\">\\n    <c-card class=\\\"p-0\\\">\\n        <c-card-body class=\\\"p-0\\\">\\n            <c-tabset boxed=\\\"true\\\" [activeTab]='activeTabNo'>\\n\\n                <c-tablist class=\\\"pt-2 px-2\\\">\\n                    <c-tab *ngFor=\\\"let tab of tabList;let index=index;\\\" (click)=\\\"onactive(tab.tab)\\\" >\\n                        {{ tab.name }}\\n                    </c-tab>\\n                </c-tablist>\\n\\n                <c-tab-content>\\n                    <ng-container *ngIf=\\\"!isSuperAdmin\\\">\\n                        <c-tab-pane>\\n                            <c-row class=\\\"mb-3\\\">\\n                                <c-col md=\\\"4\\\">\\n                                    <div class=\\\"input-group\\\">\\n                                        <div class=\\\"input-group-prepend\\\">\\n                                            <span class=\\\"input-group-text\\\"><i class=\\\"cil-search\\\"></i></span>\\n                                        </div>\\n                                        <input cInput placeholder=\\\"Search here...\\\" (input)=\\\"search($event)\\\" />\\n                                    </div>\\n                                </c-col>\\n                                <c-col md=\\\"4\\\">\\n                                    <div class=\\\"input-group d-flex align-items-center\\\">\\n                                        <label class=\\\"mb-0\\\"> Status: &nbsp;</label>\\n                                        <select cSelect id=\\\"select1\\\" (change)=\\\"changeStatus($event)\\\">\\n                                            <option [value]=\\\"'all'\\\" selected>All</option>\\n                                            <option [value]=\\\"0\\\"> Pending</option>\\n                                            <option [value]=\\\"1\\\"> Approved</option>\\n                                            <option [value]=\\\"2\\\"> Rejected</option>\\n                                        </select>\\n                                    </div>\\n                                </c-col>\\n                            </c-row>\\n                            <mat-table #table mat-table [dataSource]=\\\"dataSource\\\" matSort matSortActive=\\\"createdAt\\\"\\n                                matSortDisableClear matSortDirection=\\\"desc\\\" class=\\\"mat-elevation-z8\\\"\\n                                (matSortChange)=\\\"sortChange()\\\">\\n\\n                                <ng-container matColumnDef=\\\"userDetail.name\\\">\\n                                    <mat-header-cell [ngClass]=\\\"'ar-name'\\\" *matHeaderCellDef mat-sort-header>Name\\n                                    </mat-header-cell>\\n                                    <mat-cell [ngClass]=\\\"'ar-name'\\\" *matCellDef=\\\"let element\\\">\\n                                        {{element.name? element.name:element.userDetail.name |titlecase}}\\n                                    </mat-cell>\\n                                </ng-container>\\n\\n                                <ng-container matColumnDef=\\\"userDetail.email\\\">\\n                                    <mat-header-cell [ngClass]=\\\"'ar-email'\\\" *matHeaderCellDef >Email</mat-header-cell>\\n                                    <mat-cell [ngClass]=\\\"'ar-email'\\\" *matCellDef=\\\"let element\\\">\\n                                        {{element.email?element.email:element.userDetail.email}}\\n                                    </mat-cell>\\n                                </ng-container>\\n\\n                                <ng-container matColumnDef=\\\"status\\\">\\n                                    <mat-header-cell *matHeaderCellDef > Status </mat-header-cell>\\n                                    <mat-cell *matCellDef=\\\"let element\\\" class=\\\"status-icon\\\">\\n                                        <c-badge [color]=\\\"'success'\\\" class=\\\"mx-1 px-2 py-1\\\" *ngIf=\\\"element.status == 1\\\">\\n                                            Approved</c-badge>\\n                                        <c-badge [color]=\\\"'danger'\\\" class=\\\"mx-1 px-2 py-1\\\" *ngIf=\\\"element.status == 2\\\">\\n                                            Rejected</c-badge>\\n                                        <c-badge [color]=\\\"'warning'\\\" class=\\\"mx-1 px-2 py-1\\\" *ngIf=\\\"element.status == 0\\\">\\n                                            Pending</c-badge>\\n                                    </mat-cell>\\n                                </ng-container>\\n\\n                                <ng-container matColumnDef=\\\"action\\\">\\n                                    <mat-header-cell *matHeaderCellDef> Action </mat-header-cell>\\n                                    <mat-cell *matCellDef=\\\"let element\\\">\\n                                        <button class=\\\"btn btn-sm btn-success\\\" *ngIf=\\\"element.status == 0\\\"\\n                                            (click)=\\\"updateReqStatus(element,1)\\\">Approve</button>\\n                                        <button class=\\\"btn btn-sm btn-danger\\\" style=\\\"margin-left: 20px;\\\"\\n                                            *ngIf=\\\"element.status == 0\\\"\\n                                            (click)=\\\"updateReqStatus(element,2)\\\">Reject</button>\\n                                    </mat-cell>\\n                                </ng-container>\\n\\n                                <mat-header-row *matHeaderRowDef=\\\"logindisplayedColumns\\\"></mat-header-row>\\n                            \\n                                <mat-row *matRowDef=\\\"let row; columns: logindisplayedColumns;\\\"\\n                                   ></mat-row>\\n                            </mat-table>\\n                            \\n                            <div class=\\\"mat-table__message text-center mt-3\\\" *ngIf=\\\"!resultsLength\\\">No records found\\n                            </div>\\n\\n                            <div class=\\\"mat-table__bottom\\\">\\n                                <mat-paginator [pageSizeOptions]=\\\"[10, 25, 50, 100]\\\" [length]=\\\"resultsLength\\\"\\n                                    [showFirstLastButtons] (page)=\\\"pageChange()\\\">\\n                                </mat-paginator>\\n                            </div>\\n                        </c-tab-pane>\\n                    </ng-container>\\n\\n                    <c-tab-pane>\\n                        <c-row class=\\\"mb-3\\\">\\n                            <c-col md=\\\"4\\\">\\n                                <div class=\\\"input-group\\\">\\n                                    <div class=\\\"input-group-prepend\\\">\\n                                        <span class=\\\"input-group-text\\\"><i class=\\\"cil-search\\\"></i></span>\\n                                    </div>\\n                                    <input cInput placeholder=\\\"Search here...\\\" (input)=\\\"search($event)\\\" />\\n                                </div>\\n                            </c-col>\\n                            <c-col md=\\\"4\\\">\\n                                <div class=\\\"input-group d-flex align-items-center\\\">\\n                                    <label class=\\\"mb-0\\\"> Status: &nbsp;</label>\\n                                    <select cSelect id=\\\"select1\\\" (change)=\\\"changeStatus($event)\\\">\\n                                        <option [value]=\\\"'all'\\\" selected>All</option>\\n                                        <option [value]=\\\"0\\\"> Pending</option>\\n                                        <option [value]=\\\"1\\\"> Approved</option>\\n                                        <option [value]=\\\"2\\\"> Rejected</option>\\n                                    </select>\\n                                </div>\\n                            </c-col>\\n                        </c-row>\\n                        \\n                        <mat-table #table mat-table [dataSource]=\\\"dataSource1\\\" matSort matSortActive=\\\"createdAt\\\"\\n                            matSortDisableClear matSortDirection=\\\"desc\\\" class=\\\"mat-elevation-z8\\\"\\n                            (matSortChange)=\\\"sortChange()\\\">\\n\\n                            <ng-container matColumnDef=\\\"userDetail.name\\\">\\n                                <mat-header-cell [ngClass]=\\\"'ar-name'\\\" *matHeaderCellDef mat-sort-header>Previous Name\\n                                </mat-header-cell>\\n                                <mat-cell [ngClass]=\\\"'ar-name'\\\" *matCellDef=\\\"let element\\\">\\n                                    {{element.userDetail?element.old_name: '-' |titlecase}}\\n                                </mat-cell>\\n                            </ng-container>\\n\\n                            <ng-container matColumnDef=\\\"name\\\">\\n                                <mat-header-cell [ngClass]=\\\"'ar-name'\\\" *matHeaderCellDef>Updated Name</mat-header-cell>\\n                                <mat-cell [ngClass]=\\\"'ar-name'\\\" *matCellDef=\\\"let element\\\">\\n                                    {{element.name? element.name:'-' |titlecase}}\\n                                </mat-cell>\\n                            </ng-container>\\n\\n                            <ng-container matColumnDef=\\\"status\\\">\\n                                <mat-header-cell *matHeaderCellDef> Status </mat-header-cell>\\n                                <mat-cell *matCellDef=\\\"let element\\\" class=\\\"status-icon\\\">\\n                                    <c-badge [color]=\\\"'success'\\\" class=\\\"mx-1 px-2 py-1\\\" *ngIf=\\\"element.status == 1\\\">\\n                                        Approved</c-badge>\\n                                    <c-badge [color]=\\\"'danger'\\\" class=\\\"mx-1 px-2 py-1\\\" *ngIf=\\\"element.status == 2\\\">\\n                                        Rejected</c-badge>\\n                                    <c-badge [color]=\\\"'warning'\\\" class=\\\"mx-1 px-2 py-1\\\" *ngIf=\\\"element.status == 0\\\">\\n                                        Pending</c-badge>\\n                                </mat-cell>\\n                            </ng-container>\\n\\n                            <ng-container matColumnDef=\\\"action\\\">\\n                                <mat-header-cell *matHeaderCellDef> Action </mat-header-cell>\\n                                <mat-cell *matCellDef=\\\"let element\\\">\\n                                    <button class=\\\"btn btn-sm btn-success\\\" *ngIf=\\\"element.status == 0\\\"\\n                                        (click)=\\\"updateReqStatus(element,1)\\\">Approve</button>\\n                                    <button class=\\\"btn btn-sm btn-danger\\\" style=\\\"margin-left: 20px;\\\"\\n                                        *ngIf=\\\"element.status == 0\\\" (click)=\\\"updateReqStatus(element,2)\\\">Reject</button>\\n                                </mat-cell>\\n                            </ng-container>\\n\\n                            <mat-header-row *matHeaderRowDef=\\\"namedisplayedColumns\\\"></mat-header-row>\\n                            <mat-row *matRowDef=\\\"let row; columns: namedisplayedColumns;\\\" >\\n                            </mat-row>\\n                        </mat-table>\\n                        <div class=\\\"mat-table__message text-center mt-3\\\" *ngIf=\\\"!resultsLength\\\">No records found</div>\\n                        <div class=\\\"mat-table__bottom\\\">\\n                            <mat-paginator [pageSizeOptions]=\\\"[10, 25, 50, 100]\\\" [length]=\\\"resultsLength\\\"\\n                                [showFirstLastButtons] (page)=\\\"pageChange()\\\">\\n                            </mat-paginator>\\n                        </div>\\n                    </c-tab-pane>\\n\\n                    <c-tab-pane>\\n                        <c-row class=\\\"mb-3\\\">\\n                            <c-col md=\\\"4\\\">\\n                                <div class=\\\"input-group\\\">\\n                                    <div class=\\\"input-group-prepend\\\">\\n                                        <span class=\\\"input-group-text\\\"><i class=\\\"cil-search\\\"></i></span>\\n                                    </div>\\n                                    <input cInput placeholder=\\\"Search here...\\\" (input)=\\\"search($event)\\\" />\\n                                </div>\\n                            </c-col>\\n                            <c-col md=\\\"4\\\">\\n                                <div class=\\\"input-group d-flex align-items-center\\\">\\n                                    <label class=\\\"mb-0\\\"> Status: &nbsp;</label>\\n                                    <select cSelect id=\\\"select1\\\" (change)=\\\"changeStatus($event)\\\">\\n                                        <option [value]=\\\"'all'\\\" selected>All</option>\\n                                        <option [value]=\\\"0\\\"> Pending</option>\\n                                        <option [value]=\\\"1\\\"> Approved</option>\\n                                        <option [value]=\\\"2\\\"> Rejected</option>\\n                                    </select>\\n                                </div>\\n                            </c-col>\\n                        </c-row>\\n                        <mat-table #table mat-table [dataSource]=\\\"dataSource2\\\" matSort matSortActive=\\\"createdAt\\\"\\n                            matSortDisableClear matSortDirection=\\\"desc\\\" class=\\\"mat-elevation-z8\\\"\\n                            (matSortChange)=\\\"sortChange()\\\">\\n\\n                            <ng-container matColumnDef=\\\"userDetail.email\\\">\\n                                <mat-header-cell [ngClass]=\\\"'ar-email'\\\" *matHeaderCellDef>Previous Email ID\\n                                </mat-header-cell>\\n                                <mat-cell [ngClass]=\\\"'ar-email'\\\" *matCellDef=\\\"let element\\\">\\n                                    {{element.userDetail?element.old_email:'-'}}\\n                                </mat-cell>\\n                            </ng-container>\\n\\n                            <ng-container matColumnDef=\\\"email\\\">\\n                                <mat-header-cell [ngClass]=\\\"'ar-email'\\\" *matHeaderCellDef mat-sort-header>Updated Email\\n                                    ID </mat-header-cell>\\n                                <mat-cell [ngClass]=\\\"'ar-email'\\\" *matCellDef=\\\"let element\\\">\\n                                    {{element.email?element.email:'-'}}\\n                                </mat-cell>\\n                            </ng-container>\\n\\n                            <ng-container matColumnDef=\\\"status\\\">\\n                                <mat-header-cell *matHeaderCellDef> Status </mat-header-cell>\\n                                <mat-cell *matCellDef=\\\"let element\\\" class=\\\"status-icon\\\">\\n                                    <c-badge [color]=\\\"'success'\\\" class=\\\"mx-1 px-2 py-1\\\" *ngIf=\\\"element.status == 1\\\">\\n                                        Approved</c-badge>\\n                                    <c-badge [color]=\\\"'danger'\\\" class=\\\"mx-1 px-2 py-1\\\" *ngIf=\\\"element.status == 2\\\">\\n                                        Rejected</c-badge>\\n                                    <c-badge [color]=\\\"'warning'\\\" class=\\\"mx-1 px-2 py-1\\\" *ngIf=\\\"element.status == 0\\\">\\n                                        Pending</c-badge>\\n                                </mat-cell>\\n                            </ng-container>\\n\\n                            <ng-container matColumnDef=\\\"action\\\">\\n                                <mat-header-cell *matHeaderCellDef> Action </mat-header-cell>\\n                                <mat-cell *matCellDef=\\\"let element\\\">\\n                                    <button class=\\\"btn btn-sm btn-success\\\" *ngIf=\\\"element.status == 0\\\"\\n                                        (click)=\\\"updateReqStatus(element,1)\\\">Approve</button>\\n                                    <button class=\\\"btn btn-sm btn-danger\\\" style=\\\"margin-left: 20px;\\\"\\n                                        *ngIf=\\\"element.status == 0\\\" (click)=\\\"updateReqStatus(element,2)\\\">Reject</button>\\n                                </mat-cell>\\n                            </ng-container>\\n\\n                            <mat-header-row *matHeaderRowDef=\\\"emaildisplayedColumns\\\"></mat-header-row>\\n                            <mat-row *matRowDef=\\\"let row; columns: emaildisplayedColumns;\\\"\\n                                ></mat-row>\\n                        </mat-table>\\n                        <div class=\\\"mat-table__message text-center mt-3\\\" *ngIf=\\\"!resultsLength\\\">No records found</div>\\n                        <div class=\\\"mat-table__bottom\\\">\\n                            <mat-paginator [pageSizeOptions]=\\\"[10, 25, 50, 100]\\\" [length]=\\\"resultsLength\\\"\\n                                [showFirstLastButtons] (page)=\\\"pageChange()\\\">\\n                            </mat-paginator>\\n                        </div>\\n                    </c-tab-pane>\\n\\n                    <ng-container *ngIf=\\\"!isSuperAdmin\\\">\\n                        <c-tab-pane>\\n                            <c-row class=\\\"mb-3\\\">\\n                                <c-col md=\\\"4\\\">\\n                                    <div class=\\\"input-group\\\">\\n                                        <div class=\\\"input-group-prepend\\\">\\n                                            <span class=\\\"input-group-text\\\"><i class=\\\"cil-search\\\"></i></span>\\n                                        </div>\\n                                        <input cInput placeholder=\\\"Search here...\\\" (input)=\\\"search($event)\\\" />\\n                                    </div>\\n                                </c-col>\\n                                <c-col md=\\\"4\\\">\\n                                    <div class=\\\"input-group d-flex align-items-center\\\">\\n                                        <label class=\\\"mb-0\\\"> Status: &nbsp;</label>\\n                                        <select cSelect id=\\\"select1\\\" (change)=\\\"changeStatus($event)\\\">\\n                                            <option [value]=\\\"'all'\\\" selected>All</option>\\n                                            <option [value]=\\\"0\\\"> Pending</option>\\n                                            <option [value]=\\\"1\\\"> Approved</option>\\n                                            <option [value]=\\\"2\\\"> Rejected</option>\\n                                        </select>\\n                                    </div>\\n                                </c-col>\\n                            </c-row>\\n                            <mat-table #table mat-table [dataSource]=\\\"dataSource3\\\" matSort matSortActive=\\\"createdAt\\\"\\n                                matSortDisableClear matSortDirection=\\\"desc\\\" class=\\\"mat-elevation-z8\\\"\\n                                (matSortChange)=\\\"sortChange()\\\">\\n\\n                                <ng-container matColumnDef=\\\"userDetail.organizationId\\\">\\n                                    <mat-header-cell [ngClass]=\\\"'o-id'\\\" *matHeaderCellDef mat-sort-header>Previous ID\\n                                    </mat-header-cell>\\n                                    <mat-cell [ngClass]=\\\"'o-id'\\\" *matCellDef=\\\"let element\\\">\\n                                        {{element.userDetail?element.old_organizationId:'-'}}\\n                                    </mat-cell>\\n                                </ng-container>\\n\\n                                <ng-container matColumnDef=\\\"userDetail.organizationname\\\">\\n                                    <mat-header-cell [ngClass]=\\\"'ar-name'\\\" *matHeaderCellDef>Previous Organization\\n                                    </mat-header-cell>\\n                                    <mat-cell [ngClass]=\\\"'ar-name'\\\" *matCellDef=\\\"let element\\\">\\n\\n                                    </mat-cell>\\n                                </ng-container>\\n\\n                                <ng-container matColumnDef=\\\"organizationId\\\">\\n                                    <mat-header-cell [ngClass]=\\\"'o-id'\\\" *matHeaderCellDef mat-sort-header>Updated ID\\n                                    </mat-header-cell>\\n                                    <mat-cell [ngClass]=\\\"'o-id'\\\" *matCellDef=\\\"let element\\\">\\n                                        {{element.organizationId?element.organizationId:'-'}}\\n                                    </mat-cell>\\n                                </ng-container>\\n\\n                                <ng-container matColumnDef=\\\"organizationname\\\">\\n                                    <mat-header-cell [ngClass]=\\\"'ar-name'\\\" *matHeaderCellDef mat-sort-header>Updated\\n                                        Organization</mat-header-cell>\\n                                    <mat-cell [ngClass]=\\\"'ar-name'\\\" *matCellDef=\\\"let element\\\">\\n\\n                                    </mat-cell>\\n                                </ng-container>\\n\\n                                <ng-container matColumnDef=\\\"status\\\">\\n                                    <mat-header-cell *matHeaderCellDef> Status </mat-header-cell>\\n                                    <mat-cell *matCellDef=\\\"let element\\\" class=\\\"status-icon\\\">\\n                                        <c-badge [color]=\\\"'success'\\\" class=\\\"mx-1 px-2 py-1\\\" *ngIf=\\\"element.status == 1\\\">\\n                                            Approved</c-badge>\\n                                        <c-badge [color]=\\\"'danger'\\\" class=\\\"mx-1 px-2 py-1\\\" *ngIf=\\\"element.status == 2\\\">\\n                                            Rejected</c-badge>\\n                                        <c-badge [color]=\\\"'warning'\\\" class=\\\"mx-1 px-2 py-1\\\" *ngIf=\\\"element.status == 0\\\">\\n                                            Pending</c-badge>\\n                                    </mat-cell>\\n                                </ng-container>\\n\\n                                <ng-container matColumnDef=\\\"action\\\">\\n                                    <mat-header-cell *matHeaderCellDef> Action </mat-header-cell>\\n                                    <mat-cell *matCellDef=\\\"let element\\\">\\n                                        <button class=\\\"btn btn-sm btn-success\\\" *ngIf=\\\"element.status == 0\\\"\\n                                            (click)=\\\"updateReqStatus(element,1)\\\">Approve</button>\\n                                        <button class=\\\"btn btn-sm btn-danger\\\" style=\\\"margin-left: 20px;\\\"\\n                                            *ngIf=\\\"element.status == 0\\\"\\n                                            (click)=\\\"updateReqStatus(element,2)\\\">Reject</button>\\n                                    </mat-cell>\\n                                </ng-container>\\n\\n                                <mat-header-row *matHeaderRowDef=\\\"organizationdisplayedColumns\\\"></mat-header-row>\\n                                <mat-row *matRowDef=\\\"let row; columns: organizationdisplayedColumns;\\\"\\n                                    ></mat-row>\\n                            </mat-table>\\n                            <div class=\\\"mat-table__message text-center mt-3\\\" *ngIf=\\\"!resultsLength\\\">No records found\\n                            </div>\\n                            <div class=\\\"mat-table__bottom\\\">\\n                                <mat-paginator [pageSizeOptions]=\\\"[10, 25, 50, 100]\\\" [length]=\\\"resultsLength\\\"\\n                                    [showFirstLastButtons] (page)=\\\"pageChange()\\\">\\n                                </mat-paginator>\\n                            </div>\\n                        </c-tab-pane>\\n\\n                        <c-tab-pane>\\n                            <c-row class=\\\"mb-3\\\">\\n                                <c-col md=\\\"4\\\">\\n                                    <div class=\\\"input-group\\\">\\n                                        <div class=\\\"input-group-prepend\\\">\\n                                            <span class=\\\"input-group-text\\\"><i class=\\\"cil-search\\\"></i></span>\\n                                        </div>\\n                                        <input cInput placeholder=\\\"Search here...\\\" (input)=\\\"search($event)\\\" />\\n                                    </div>\\n                                </c-col>\\n                                <c-col md=\\\"4\\\">\\n                                    <div class=\\\"input-group d-flex align-items-center\\\">\\n                                        <label class=\\\"mb-0\\\"> Status: &nbsp;</label>\\n                                        <select cSelect id=\\\"select1\\\" (change)=\\\"changeStatus($event)\\\">\\n                                            <option [value]=\\\"'all'\\\" selected>All</option>\\n                                            <option [value]=\\\"0\\\"> Pending</option>\\n                                            <option [value]=\\\"1\\\"> Approved</option>\\n                                            <option [value]=\\\"2\\\"> Rejected</option>\\n                                        </select>\\n                                    </div>\\n                                </c-col>\\n                            </c-row>\\n                            <mat-table #table mat-table [dataSource]=\\\"dataSource4\\\" matSort matSortActive=\\\"createdAt\\\"\\n                                matSortDisableClear matSortDirection=\\\"desc\\\" class=\\\"mat-elevation-z8\\\"\\n                                (matSortChange)=\\\"sortChange()\\\">\\n\\n                                <ng-container matColumnDef=\\\"userDetail.name\\\">\\n                                    <mat-header-cell [ngClass]=\\\"'ar-name'\\\" *matHeaderCellDef mat-sort-header>Name\\n                                    </mat-header-cell>\\n                                    <mat-cell [ngClass]=\\\"'ar-name'\\\" *matCellDef=\\\"let element\\\">\\n                                        {{element.name? element.name:element.userDetail.name |titlecase}}\\n                                    </mat-cell>\\n                                </ng-container>\\n\\n                                <ng-container matColumnDef=\\\"uniqueDevice\\\">\\n                                    <mat-header-cell [ngClass]=\\\"'ar-name'\\\" *matHeaderCellDef>Unique Device\\n                                    </mat-header-cell>\\n                                    <mat-cell [ngClass]=\\\"'ar-name'\\\" *matCellDef=\\\"let element\\\">\\n                                        {{element.uniqueDevice? element.uniqueDevice:'-'}}\\n                                    </mat-cell>\\n                                </ng-container>\\n\\n                                <ng-container matColumnDef=\\\"status\\\">\\n                                    <mat-header-cell *matHeaderCellDef> Status </mat-header-cell>\\n                                    <mat-cell *matCellDef=\\\"let element\\\" class=\\\"status-icon\\\">\\n                                        <c-badge [color]=\\\"'success'\\\" class=\\\"mx-1 px-2 py-1\\\" *ngIf=\\\"element.status == 1\\\">\\n                                            Approved</c-badge>\\n                                        <c-badge [color]=\\\"'danger'\\\" class=\\\"mx-1 px-2 py-1\\\" *ngIf=\\\"element.status == 2\\\">\\n                                            Rejected</c-badge>\\n                                        <c-badge [color]=\\\"'warning'\\\" class=\\\"mx-1 px-2 py-1\\\" *ngIf=\\\"element.status == 0\\\">\\n                                            Pending</c-badge>\\n                                    </mat-cell>\\n                                </ng-container>\\n\\n                                <ng-container matColumnDef=\\\"action\\\">\\n                                    <mat-header-cell *matHeaderCellDef> Action </mat-header-cell>\\n                                    <mat-cell *matCellDef=\\\"let element\\\">\\n                                        <button class=\\\"btn btn-sm btn-success\\\" *ngIf=\\\"element.status == 0\\\"\\n                                            (click)=\\\"updateReqStatus(element,1)\\\">Approve</button>\\n                                        <button class=\\\"btn btn-sm btn-danger\\\" style=\\\"margin-left: 20px;\\\"\\n                                            *ngIf=\\\"element.status == 0\\\"\\n                                            (click)=\\\"updateReqStatus(element,2)\\\">Reject</button>\\n                                    </mat-cell>\\n                                </ng-container>\\n\\n                                <mat-header-row *matHeaderRowDef=\\\"uniquedevicedisplayedColumns\\\"></mat-header-row>\\n                                <mat-row *matRowDef=\\\"let row; columns: uniquedevicedisplayedColumns;\\\"\\n                                    ></mat-row>\\n                            </mat-table>\\n                            <div class=\\\"mat-table__message text-center mt-3\\\" *ngIf=\\\"!resultsLength\\\">No records found\\n                            </div>\\n                            <div class=\\\"mat-table__bottom\\\">\\n                                <mat-paginator [pageSizeOptions]=\\\"[10, 25, 50, 100]\\\" [length]=\\\"resultsLength\\\"\\n                                    [showFirstLastButtons] (page)=\\\"pageChange()\\\">\\n                                </mat-paginator>\\n                            </div>\\n                        </c-tab-pane>\\n                    </ng-container>\\n\\n                </c-tab-content>\\n            </c-tabset>\\n        </c-card-body>\\n    </c-card>\\n</div>\\n\\n<!--<div class=\\\"fade-in\\\">\\n    <c-card>\\n        <c-card-header class=\\\"d-flex align-items-center\\\">\\n            <h4 class=\\\"mb-0\\\">Approval Requests List</h4>\\n        </c-card-header>\\n        <c-card-body>\\n            <c-row class=\\\"mb-3\\\">\\n                <c-col md=\\\"4\\\">\\n                    <div class=\\\"input-group\\\">\\n                        <div class=\\\"input-group-prepend\\\">\\n                            <span class=\\\"input-group-text\\\"><i class=\\\"cil-search\\\"></i></span>\\n                        </div>\\n                        <input cInput placeholder=\\\"Search here...\\\" (input)=\\\"search($event)\\\" />\\n                    </div>\\n                </c-col>\\n                <c-col md=\\\"4\\\">\\n                    <div class=\\\"input-group d-flex align-items-center\\\">\\n                        <label class=\\\"mb-0\\\"> Status: &nbsp;</label>\\n                        <select cSelect id=\\\"select1\\\" (change)=\\\"changeStatus($event)\\\">\\n                            <option [value]=\\\"'all'\\\" selected>All</option>\\n                            <option [value]=\\\"0\\\"> Pending</option>\\n                            <option [value]=\\\"1\\\"> Approved</option>\\n                            <option [value]=\\\"2\\\"> Rejected</option>\\n                        </select>\\n                    </div>\\n                </c-col>\\n            </c-row>\\n            <mat-table #table mat-table [dataSource]=\\\"dataSource\\\" matSort matSortActive=\\\"createdAt\\\" matSortDisableClear\\n                matSortDirection=\\\"desc\\\" class=\\\"mat-elevation-z8\\\" (matSortChange)=\\\"sortChange()\\\">\\n\\n                <ng-container matColumnDef=\\\"userDetail.name\\\">\\n                    <mat-header-cell *matHeaderCellDef mat-sort-header>Old Name </mat-header-cell>\\n                    <mat-cell *matCellDef=\\\"let element\\\">\\n                        {{element.userDetail?element.userDetail.name: '-' |titlecase}}\\n                    </mat-cell>\\n                </ng-container>\\n\\n\\n                <ng-container matColumnDef=\\\"userDetail.email\\\">\\n                    <mat-header-cell *matHeaderCellDef>Old Email </mat-header-cell>\\n                    <mat-cell *matCellDef=\\\"let element\\\">\\n                        {{element.userDetail?element.userDetail.email:'-'}}\\n                    </mat-cell>\\n                </ng-container>\\n\\n\\n                <ng-container matColumnDef=\\\"userDetail.organizationId\\\">\\n                    <mat-header-cell *matHeaderCellDef mat-sort-header>Old Organization Id</mat-header-cell>\\n                    <mat-cell *matCellDef=\\\"let element\\\"> {{element.userDetail?element.userDetail.organizationId:'-'}}\\n                    </mat-cell>\\n                </ng-container>\\n\\n                <ng-container matColumnDef=\\\"name\\\">\\n                    <mat-header-cell *matHeaderCellDef mat-sort-header>Name </mat-header-cell>\\n                    <mat-cell *matCellDef=\\\"let element\\\"> {{element.name? element.name:'-' |titlecase}}\\n                    </mat-cell>\\n                </ng-container>\\n                <ng-container matColumnDef=\\\"email\\\">\\n                    <mat-header-cell *matHeaderCellDef mat-sort-header>Email </mat-header-cell>\\n                    <mat-cell *matCellDef=\\\"let element\\\"> {{element.email?element.email:'-'}}\\n                    </mat-cell>\\n                </ng-container>\\n                <ng-container matColumnDef=\\\"organizationId\\\">\\n                    <mat-header-cell *matHeaderCellDef mat-sort-header>Organization Id </mat-header-cell>\\n                    <mat-cell *matCellDef=\\\"let element\\\"> {{element.organizationId?element.organizationId:'-'}}\\n                    </mat-cell>\\n                </ng-container>\\n\\n                <ng-container matColumnDef=\\\"status\\\">\\n                    <mat-header-cell *matHeaderCellDef> Status </mat-header-cell>\\n                    <mat-cell *matCellDef=\\\"let element\\\" class=\\\"status-icon\\\">\\n                        <c-badge [color]=\\\"'success'\\\" class=\\\"mx-1 px-2 py-1\\\" *ngIf=\\\"element.status == 1\\\">\\n                            Approved</c-badge>\\n                        <c-badge [color]=\\\"'danger'\\\" class=\\\"mx-1 px-2 py-1\\\" *ngIf=\\\"element.status == 2\\\">\\n                            Rejected</c-badge>\\n                        <c-badge [color]=\\\"'warning'\\\" class=\\\"mx-1 px-2 py-1\\\" *ngIf=\\\"element.status == 0\\\">\\n                            Pending</c-badge>\\n                    </mat-cell>\\n                </ng-container>\\n\\n                <ng-container matColumnDef=\\\"action\\\">\\n                    <mat-header-cell *matHeaderCellDef> Action </mat-header-cell>\\n                    <mat-cell *matCellDef=\\\"let element\\\">\\n                        <button class=\\\"btn btn-block btn-sm btn-success\\\" *ngIf=\\\"element.status == 0\\\"\\n                            (click)=\\\"updateReqStatus(element,1)\\\">Approve</button>\\n                        <button class=\\\"btn btn-block btn-sm btn-danger\\\" *ngIf=\\\"element.status == 0\\\"\\n                            (click)=\\\"updateReqStatus(element,2)\\\">Reject</button>\\n                    </mat-cell>\\n                </ng-container>\\n\\n                <mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></mat-header-row>\\n                <mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></mat-row>\\n            </mat-table>\\n            <div class=\\\"mat-table__message text-center mt-3\\\" *ngIf=\\\"!resultsLength\\\">No records found</div>\\n            <div class=\\\"mat-table__bottom\\\">\\n                <mat-paginator [pageSizeOptions]=\\\"[10, 25, 50, 100]\\\" [length]=\\\"resultsLength\\\" [showFirstLastButtons]\\n                    (page)=\\\"pageChange()\\\">\\n                </mat-paginator>\\n            </div>\\n        </c-card-body>\\n    </c-card>\\n</div>-->\";"]}