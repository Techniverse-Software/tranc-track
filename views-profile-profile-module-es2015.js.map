{"version":3,"sources":["./src/app/views/profile/profile/profile.component.ts","./src/app/views/profile/payment-details/payment-details.component.html","./src/app/views/profile/profile.module.ts","./src/app/views/profile/profile-otp/profile-otp.component.ts","./src/app/views/profile/profile/profile.component.scss","./src/app/views/profile/change-password/change-password.component.ts","./src/app/views/profile/payment-details/payment-details.component.scss","./src/app/views/profile/profile-otp/profile-otp.component.html","./src/app/views/profile/change-password/change-password.component.scss","./src/app/views/profile/change-password/change-password.component.html","./src/app/views/profile/payment-details/payment-details.component.ts","./src/app/views/profile/profile-otp/profile-otp.component.scss","./src/app/views/profile/profile/profile.component.html","./node_modules/@stripe/stripe-js/dist/stripe.esm.js"],"names":[],"mappings":"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","file":"views-profile-profile-module-es2015.js","sourcesContent":["import { Component, OnInit } from \"@angular/core\";\nimport { AuthService } from \"../../../services/auth.service\";\nimport { HttpReqService } from \"../../../services/http-req.service\";\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\nimport { ValidationFormsService } from \"../../../services/validation-forms.service\";\nimport { environment } from \"../../../../environments/environment\";\nimport { GlobalService } from \"../../../services/global.service\";\nimport { ProfileOtpComponent } from \"../profile-otp/profile-otp.component\";\nimport { BsModalRef, BsModalService } from \"ngx-bootstrap/modal\";\n\n@Component({\n  selector: \"app-profile\",\n  templateUrl: \"./profile.component.html\",\n  styleUrls: [\"./profile.component.scss\"],\n})\nexport class ProfileComponent implements OnInit {\n  tabs: any[] = [\n    { header: \"Update Account\", icon: \"cil-user\" },\n    { header: \"Change Password\", icon: \"cil-lock-locked\" },\n    { header: \"Payment Details\", icon: \"cil-lock-locked\" },\n  ];\n  file: any;\n  imgUrl: any;\n  tokenData: any;\n  userData: any = {};\n  profileForm: FormGroup;\n  formErrors: any;\n  submitted = false;\n  modalRef: BsModalRef;\n  mediaUrl = environment.mediaUrl;\n  constructor(\n    private httpReqService: HttpReqService,\n    private authService: AuthService,\n    private fb: FormBuilder,\n    public vf: ValidationFormsService,\n    public gs: GlobalService,\n    private modalService: BsModalService\n  ) {\n    this.httpReqService.clearMassage();\n    this.tokenData = this.authService.decodeToken();\n    this.formErrors = this.vf.errorMessages;\n    this.createForm();\n  }\n\n  ngOnInit(): void {\n    this.getUserDetail();\n  }\n\n  // convenience getter for easy access to form fields\n  get f() {\n    return this.profileForm.controls;\n  }\n\n  /**\n   * Create profile form\n   */\n  createForm() {\n    this.profileForm = this.fb.group({\n      email: [\"\", [Validators.required]],\n      name: [\n        \"\",\n        [Validators.required, Validators.pattern(this.vf.formRules.name)],\n      ],\n    });\n  }\n\n  selectProfile(e) {\n    this.file = e.target.files[0];\n    const reader = new FileReader();\n    reader.readAsDataURL(this.file);\n    reader.onload = (_event) => {\n      this.imgUrl = reader.result;\n    };\n  }\n\n  async getUserDetail() {\n    const response: any = await this.httpReqService.get(\n      \"users\",\n      this.tokenData.user._id\n    );\n    this.userData = response.items[0];\n    this.profileForm.patchValue(this.userData);\n  }\n\n  onValidate() {\n    this.submitted = true;\n\n    // stop here if form is invalid\n    return this.profileForm.status === \"VALID\";\n  }\n\n  async onSubmit() {\n    if (this.onValidate()) {\n      if (\n        this.profileForm.value.email != this.userData.email ||\n        this.profileForm.value.name != this.userData.name ||\n        this.imgUrl\n      ) {\n        this.profileForm.value._id = this.userData._id;\n        if (this.profileForm.value.email == this.userData.email) {\n          delete this.profileForm.value.email;\n        }\n        if (this.profileForm.value.name == this.userData.name) {\n          delete this.profileForm.value.name;\n        }\n        const formData = new FormData();\n        formData.append(\"data\", JSON.stringify(this.profileForm.value));\n        if (this.file) {\n          formData.append(\"image\", this.file);\n        }\n        const response: any = await this.httpReqService.post(\n          \"users/editProfile\",\n          formData,\n          true\n        );\n        if (response) {\n          if (this.profileForm.value && this.userData.email !== this.profileForm.value.email) {\n            const initialState = {\n              title: \"Profile OTP\",\n            };\n            this.modalRef = this.modalService.show(ProfileOtpComponent, {\n              class: \"modal-xl modal-dialog-centered \",\n              initialState,\n              backdrop: \"static\",\n              keyboard: false,\n            });\n            this.modalRef.content.cancleButtonText = \"Cancel\";\n            this.modalRef.content.submitButtonText = \"Submit\";\n            this.modalRef.content.response.subscribe((result) => {\n              if (result) {\n              }\n            });\n          }\n          this.userData = response.items;\n          const obj = {\n            name: response.items.name,\n            email: response.items.email,\n            image: response.items.image,\n          };\n          localStorage.setItem(\"currentUser\", JSON.stringify(obj));\n          this.authService.profileSubject(obj);\n        }\n      } else {\n        this.gs.resMassage.massage = \"Already up to date !!\";\n        this.gs.resMassage.status = \"success\";\n        this.httpReqService.hideMassege();\n      }\n    }\n  }\n}\n","export default \"<c-card>\\n    <c-card-body>\\n        <c-row>\\n            <c-col sm=\\\"12\\\" md=\\\"6\\\">\\n                <label for=\\\"card-element\\\">Card</label>\\n                <div id=\\\"card-element\\\"></div>\\n            </c-col>\\n        </c-row>\\n    </c-card-body>\\n    <c-card-footer>\\n        <button cButton type=\\\"submit\\\" color=\\\"primary\\\" size=\\\"md\\\" class=\\\"mfe-1\\\" (click)=\\\"onClick()\\\">\\n            <span> Save Card</span>\\n        </button>\\n        <button cButton type=\\\"reset\\\" color=\\\"secondary\\\" size=\\\"md\\\" class=\\\"mfe-1\\\" routerLink=\\\"/dashboard\\\">\\n            <c-icon name=\\\"cil-x-circle\\\" size=\\\"sm\\\"></c-icon>\\n            <span> Cancel</span>\\n        </button>\\n    </c-card-footer>\\n</c-card>\";","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ProfileComponent } from './profile/profile.component';\nimport { ChangePasswordComponent } from './change-password/change-password.component';\nimport { RouterModule } from '@angular/router';\n\n// CoreUI Modules\nimport {\n  ButtonModule,\n  CardModule,\n  FormModule,\n  GridModule,\n  ImgModule,\n  TabsetModule,\n} from '@coreui/angular';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { NgOtpInputModule } from 'ng-otp-input';\nimport { IconModule } from '@coreui/icons-angular';\n// import { ReactiveFormsModule } from '@angular/forms';\nimport { ProfileOtpComponent } from './profile-otp/profile-otp.component';\nimport { PaymentDetailsComponent } from './payment-details/payment-details.component';\n\nconst routes = [\n  {\n    path: '',\n    children: [\n      {\n        path: '',\n        redirectTo: 'update',\n      },\n      {\n        path: 'update',\n        data: {\n          title: 'Profile',\n        },\n        component: ProfileComponent\n      },\n      {\n        path: 'change-password',\n        component: ChangePasswordComponent\n      }\n    ]\n  }\n];\n\n@NgModule({\n  declarations: [\n    ProfileComponent,\n    ChangePasswordComponent,\n    ProfileOtpComponent,\n    PaymentDetailsComponent\n  ],\n  imports: [\n    CommonModule,\n    RouterModule.forChild(routes),\n    TabsetModule,\n    CardModule,\n    IconModule,\n    GridModule,\n    FormModule,\n    ButtonModule,\n    ImgModule,\n    FormsModule,\n    ReactiveFormsModule,\n    NgOtpInputModule\n  ]\n})\nexport class ProfileModule { }\n","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { Subject } from 'rxjs';\nimport { AuthService } from '../../../services/auth.service';\nimport { GlobalService } from '../../../services/global.service';\nimport { HttpReqService } from '../../../services/http-req.service';\nimport { ValidationFormsService } from '../../../services/validation-forms.service';\n\n@Component({\n  selector: 'app-profile-otp',\n  templateUrl: './profile-otp.component.html',\n  styleUrls: ['./profile-otp.component.scss'],\n  encapsulation: ViewEncapsulation.None,\n})\nexport class ProfileOtpComponent implements OnInit {\n\n  title: any;\n  cancleButtonText: string;\n  submitButtonText: string;\n  public response: Subject<boolean>;\n  verifyOtpForm: FormGroup;\n  otp: any;\n  formErrors: any;\n  userData: any = {};\n  submitted = false;\n  tokenData: any;\n\n  constructor(\n    public modalRef: BsModalRef,\n    private fb: FormBuilder,\n    public vf: ValidationFormsService,\n    public authService: AuthService,\n    public gs: GlobalService,\n    private httpReqService: HttpReqService,\n  ) {\n    this.httpReqService.clearMassage();\n    this.formErrors = this.vf.errorMessages;\n    this.tokenData = this.authService.decodeToken();\n  }\n\n  ngOnInit(): void {\n    this.getUserDetail();\n    this.response = new Subject();\n    this.verifyOtpForm = this.fb.group({\n      otp: [\"\", [Validators.required]],\n    });\n  }\n\n  async getUserDetail() {\n    const response: any = await this.httpReqService.get('users', this.tokenData.user._id);\n    this.userData = response.items[0];\n  }\n\n  onOtpChange(otp) {\n    this.otp = otp;\n  }\n\n  // convenience getter for easy access to form fields\n  get f() {\n    return this.verifyOtpForm.controls;\n  }\n\n  cancle(): void {\n    this.response.next();\n    this.modalRef.hide();\n  }\n\n  onValidate() {\n    this.submitted = true;\n    // stop here if form is invalid\n    return this.verifyOtpForm.status === \"VALID\";\n  }\n\n  async updateProfile() {\n    if (this.onValidate()) {\n\n      const obj = {\n        otp: this.verifyOtpForm.value.otp,\n        email: this.userData.email\n      };\n\n      const response: any = await this.httpReqService.post(\n        \"users/verifyChangeReqOtp\",\n        obj,\n        true\n      );\n      console.log(response)\n    }\n  }\n\n\n}","export default \".image-section {\\n  display: inline-grid !important;\\n}\\n.image-section img {\\n  height: 256px;\\n  width: 256px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3Byb2ZpbGUuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSwrQkFBQTtBQUNKO0FBQUk7RUFDSSxhQUFBO0VBQ0EsWUFBQTtBQUVSIiwiZmlsZSI6InByb2ZpbGUuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuaW1hZ2Utc2VjdGlvbntcbiAgICBkaXNwbGF5OiBpbmxpbmUtZ3JpZCAhaW1wb3J0YW50O1xuICAgIGltZ3tcbiAgICAgICAgaGVpZ2h0OiAyNTZweDtcbiAgICAgICAgd2lkdGg6IDI1NnB4O1xuICAgIH1cbn0iXX0= */\";","import { Component, OnInit } from '@angular/core';\nimport { HttpReqService } from '../../../services/http-req.service';\nimport { FormBuilder, FormGroup, ValidationErrors, ValidatorFn, Validators } from '@angular/forms';\nimport { ValidationFormsService } from '../../../services/validation-forms.service';\nimport { GlobalService } from '../../../services/global.service';\nimport { AuthService } from '../../../services/auth.service';\nimport { Router } from '@angular/router';\n\n/** passwords must match - custom validator */\nexport const confirmPasswordValidator: ValidatorFn = (\n  control: FormGroup\n): ValidationErrors | null => {\n  const password = control.get('password');\n  const confirm = control.get('confirmPassword');\n  return password && confirm && password.value === confirm.value\n    ? null\n    : { passwordMismatch: true };\n};\n\n@Component({\n  selector: 'app-change-password',\n  templateUrl: './change-password.component.html',\n  styleUrls: ['./change-password.component.scss']\n})\nexport class ChangePasswordComponent implements OnInit {\n  changePasswordForm: FormGroup;\n  formErrors: any;\n  submitted = false;\n  passwordType = 'password';\n  passwordIcon = 'fa fa-eye-slash';\n  oldPasswordType = 'password';\n  oldPasswordIcon = 'fa fa-eye-slash';\n  cPasswordType = 'password';\n  cPasswordIcon = 'fa fa-eye-slash';\n  constructor(\n    private httpReqService: HttpReqService,\n    private fb: FormBuilder,\n    public vf: ValidationFormsService,\n    public gs: GlobalService,\n    private authService: AuthService,\n    private router: Router\n  ) {\n    this.httpReqService.clearMassage();\n    this.formErrors = this.vf.errorMessages;\n    this.createForm();\n  }\n\n  ngOnInit(): void {\n  }\n\n  // convenience getter for easy access to form fields\n  get f() {\n    return this.changePasswordForm.controls;\n  }\n\n  /**\n  * Create  form\n  */\n  createForm() {\n    this.changePasswordForm = this.fb.group(\n      {\n\n        oldPassword: ['', [\n          Validators.required,\n          //Validators.minLength(this.vf.formRules.passwordMin),\n          //Validators.pattern(this.vf.formRules.passwordPattern),\n        ]],\n        password: [\n          '',\n          [\n            Validators.required,\n            Validators.minLength(this.vf.formRules.passwordMin),\n            Validators.pattern(this.vf.formRules.passwordPattern),\n          ],\n        ],\n        confirmPassword: ['', [Validators.required]],\n      },\n      { validators: confirmPasswordValidator }\n    );\n  }\n\n  onValidate() {\n    this.submitted = true;\n\n    // stop here if form is invalid\n    return this.changePasswordForm.status === 'VALID';\n  }\n\n  async onSubmit() {\n    if (this.onValidate()) {\n      const response: any = await this.httpReqService.post('users/changePassword', this.changePasswordForm.value, true);\n      if (response) {\n        this.changePasswordForm.reset();\n        this.submitted = false;\n        this.logOut();\n      }\n    }\n  }\n\n  async logOut() {\n    const response = await this.httpReqService.post('users/logOut', {}, false);\n    if (response) {\n      localStorage.removeItem('accessToken');\n      localStorage.removeItem('currentUser');\n      this.authService.currentUserSubjet(null);\n      this.router.navigate(['auth/login']);\n    }\n  }\n\n  togglePassword() {\n    this.passwordType = this.passwordType === 'password' ? 'text' : 'password';\n    this.passwordIcon = this.passwordIcon === 'fa fa-eye-slash' ? 'fa fa-eye' : 'fa fa-eye-slash';\n  }\n  oldTogglePassword() {\n    this.oldPasswordType = this.oldPasswordType === 'password' ? 'text' : 'password';\n    this.oldPasswordIcon = this.oldPasswordIcon === 'fa fa-eye-slash' ? 'fa fa-eye' : 'fa fa-eye-slash';\n  }\n  cTogglePassword() {\n    this.cPasswordType = this.cPasswordType === 'password' ? 'text' : 'password';\n    this.cPasswordIcon = this.cPasswordIcon === 'fa fa-eye-slash' ? 'fa fa-eye' : 'fa fa-eye-slash';\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJwYXltZW50LWRldGFpbHMuY29tcG9uZW50LnNjc3MifQ== */\";","export default \"<div class=\\\"modal-content\\\">\\n    <div class=\\\"modal-header\\\">\\n        <h5 class=\\\"modal-title custom-title\\\" id=\\\"exampleModalLabel\\\">{{title}}</h5>\\n    </div>\\n    <div class=\\\"modal-body\\\">\\n        <form [formGroup]=\\\"verifyOtpForm\\\" novalidate (ngSubmit)=\\\"updateProfile()\\\" class=\\\"needs-validation\\\">\\n            <h3>Please enter 5 digit passcode that was sent to your mail</h3>\\n            <div class=\\\"input-group mb-3\\\">\\n                <c-form-group cRow>\\n                    <label cLabel=\\\"col\\\" cCol md=\\\"4\\\">OTP</label>\\n                    <c-col md=\\\"8\\\">\\n                        <input cInput type=\\\"text\\\" maxlength=\\\"5\\\" formControlName=\\\"otp\\\" placeholder=\\\"Enter otp\\\">\\n                        <div *ngIf=\\\"submitted && f['otp'].invalid\\\" class=\\\"invalid-feedback d-block\\\">\\n                            <div *ngIf=\\\"f['otp'].errors.required\\\">\\n                                Please enter OTP.\\n                            </div>\\n                        </div>\\n                    </c-col>\\n                </c-form-group>\\n            </div>\\n            <div class=\\\"massegeCls\\\" [ngClass]=\\\"{\\n                errorRes: gs.resMassage.status == 'error',\\n                succassRes: gs.resMassage.status == 'success'\\n              }\\\">\\n                {{ gs.resMassage.massage || \\\"\\\" }}\\n            </div>\\n        </form>\\n    </div>\\n    <div class=\\\"modal-footer\\\">\\n        <button cButton color=\\\"primary\\\" (click)=\\\"updateProfile()\\\">{{submitButtonText}}</button>\\n        <button cButton color=\\\"secondary\\\" (click)=\\\"cancle()\\\">{{cancleButtonText}}</button>\\n    </div>\\n</div>\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJjaGFuZ2UtcGFzc3dvcmQuY29tcG9uZW50LnNjc3MifQ== */\";","export default \"<c-card>\\n    <c-card-body>\\n        <form [formGroup]=\\\"changePasswordForm\\\" novalidate class=\\\"needs-validation\\\">\\n            <c-row>\\n                <c-col sm=\\\"12\\\" md=\\\"6\\\">\\n                    <c-form-group>\\n                        <label for=\\\"ccnumber\\\">Current Password</label>\\n                        <c-input-group>\\n                            <input cInput id=\\\"ccnumber\\\" [type]=\\\"oldPasswordType\\\" formControlName=\\\"oldPassword\\\"\\n                                [ngClass]=\\\"{ 'is-invalid':  (submitted || f.oldPassword.touched) && f.oldPassword.invalid, 'is-valid': f.oldPassword.touched && f.oldPassword.valid }\\\">\\n                            <c-input-group-append>\\n                                <c-input-group-text>\\n                                    <i [class]=\\\"oldPasswordIcon\\\" aria-hidden=\\\"true\\\" (click)=\\\"oldTogglePassword()\\\"></i>\\n                                </c-input-group-text>\\n                            </c-input-group-append>\\n                            <div *ngIf=\\\"submitted && f['oldPassword'].invalid\\\" class=\\\"invalid-feedback\\\">\\n                                <div *ngIf=\\\"f['oldPassword'].errors.required\\\">Current Password is required</div>\\n                                <!--<div *ngIf=\\\"f['oldPassword'].errors.minlength\\\">{{formErrors.password.minLength}}</div>\\n                                <div *ngIf=\\\"f['oldPassword'].errors.pattern\\\">{{formErrors.password.pattern}}</div>-->\\n                            </div>\\n                        </c-input-group>\\n                    </c-form-group>\\n                </c-col>\\n            </c-row>\\n            <c-row>\\n                <c-col sm=\\\"12\\\" md=\\\"6\\\">\\n                    <c-form-group>\\n                        <label cLabel for=\\\"name\\\">New Password</label>\\n                        <c-input-group>\\n                            <input cInput id=\\\"name\\\" formControlName=\\\"password\\\" [type]=\\\"passwordType\\\"\\n                                [ngClass]=\\\"{ 'is-invalid':  (submitted || f.password.touched) && f.password.invalid, 'is-valid': f.password.touched && f.password.valid }\\\">\\n                            <c-input-group-append>\\n                                <c-input-group-text>\\n                                    <i [class]=\\\"passwordIcon\\\" aria-hidden=\\\"true\\\" (click)=\\\"togglePassword()\\\"></i>\\n                                </c-input-group-text>\\n                            </c-input-group-append>\\n                            <div *ngIf=\\\"submitted && f['password'].invalid\\\" class=\\\"invalid-feedback\\\">\\n                                <div *ngIf=\\\"f['password'].errors.required\\\">Password is required</div>\\n                                <div *ngIf=\\\"f['password'].errors.minlength\\\">{{formErrors.password.minLength}}</div>\\n                                <div *ngIf=\\\"f['password'].errors.pattern\\\">{{formErrors.password.pattern}}</div>\\n                            </div>\\n                        </c-input-group>\\n                    </c-form-group>\\n                </c-col>\\n            </c-row>\\n            <c-row>\\n                <c-col sm=\\\"12\\\" md=\\\"6\\\">\\n                    <c-form-group class=\\\"image-section\\\">\\n                        <label cLabel for=\\\"name\\\">Confirm New Password</label>\\n                        <c-input-group>\\n                            <input cInput [type]=\\\"cPasswordType\\\" formControlName=\\\"confirmPassword\\\" required\\n                                [ngClass]=\\\"{ 'is-invalid': submitted && changePasswordForm.errors, 'is-valid': f.confirmPassword.touched && !changePasswordForm.errors }\\\">\\n                            <c-input-group-append>\\n                                <c-input-group-text>\\n                                    <i [class]=\\\"cPasswordIcon\\\" aria-hidden=\\\"true\\\" (click)=\\\"cTogglePassword()\\\"></i>\\n                                </c-input-group-text>\\n                            </c-input-group-append>\\n                            <div *ngIf=\\\"submitted && changePasswordForm.errors\\\" class=\\\"invalid-feedback\\\">\\n                                <div *ngIf=\\\"changePasswordForm.errors['passwordMismatch']\\\">\\n                                    {{formErrors.confirmPassword.passwordMismatch}}</div>\\n                            </div>\\n                        </c-input-group>\\n                    </c-form-group>\\n                </c-col>\\n            </c-row>\\n        </form>\\n    </c-card-body>\\n    <c-card-footer>\\n        <button cButton type=\\\"submit\\\" color=\\\"primary\\\" size=\\\"md\\\" class=\\\"mfe-1\\\" (click)=\\\"onSubmit()\\\">\\n            <span> Change Password</span>\\n        </button>\\n        <button cButton type=\\\"reset\\\" color=\\\"secondary\\\" size=\\\"md\\\" class=\\\"mfe-1\\\" routerLink=\\\"/dashboard\\\">\\n            <c-icon name=\\\"cil-x-circle\\\" size=\\\"sm\\\"></c-icon>\\n            <span> Cancel</span>\\n        </button>\\n    </c-card-footer>\\n    <div class=\\\"massegeCls\\\"\\n        [ngClass]=\\\"{'errorRes' : gs.resMassage.status == 'error', 'succassRes' : gs.resMassage.status == 'success'}\\\">\\n        {{gs.resMassage.massage || ''}}\\n    </div>\\n</c-card>\";","import { HttpClient } from '@angular/common/http';\nimport { Component, OnInit } from '@angular/core';\nimport { loadStripe, Stripe, StripeElements } from '@stripe/stripe-js';\nimport { HttpReqService } from '../../../services/http-req.service';\nimport { AuthService } from \"../../../services/auth.service\";\n\n@Component({\n  selector: 'app-payment-details',\n  templateUrl: './payment-details.component.html',\n  styleUrls: ['./payment-details.component.scss']\n})\nexport class PaymentDetailsComponent implements OnInit {\n  tokenData: any;\n  stripe: Stripe;\n  elements: StripeElements;\n  cardElement\n\n  styleCard = {\n    'style': {\n      'base': {\n        'fontFamily': 'Arial, sans-serif',\n        'fontSize': '8px',\n        'color': '#C1C7CD',\n      },\n      'Invalid': { 'color': 'red', },\n    }\n  };\n  constructor(\n    private httpClient: HttpClient,\n    private httpReqService: HttpReqService,\n    public authService: AuthService,\n  ) { }\n\n  ngOnInit(): void {\n    this.tokenData = this.authService.decodeToken();\n    this.initStripe();\n  }\n  async initStripe() {\n    this.stripe = await loadStripe('pk_test_51JCS4KSJu2s95RzqVBt3GG75J1GwBJ1HfwqqrI0ty5F0yxTlIf5V8AAgfbGiM2DGVEi6w7JNM742fat5Lr4i40AM00rhzDcuHt');\n    this.createElements()\n  }\n\n  createElements() {\n    this.elements = this.stripe.elements();\n    this.cardElement = this.elements.create('card');\n    this.cardElement = this.elements.getElement('card');\n    this.cardElement.mount('#card-element');\n    this.cardElement.on('change', function (event) {\n      if (event.complete) {\n        console.log('Complete', event)\n        // enable payment button\n      } else if (event.error) {\n        // show validation to customer\n        console.log('Error', event)\n      }\n    });\n  }\n\n  onClick() {\n    let _this = this;\n    var resultContainer = document.getElementById('card-result');\n    this.stripe.createPaymentMethod({\n      type: 'card',\n      card: this.cardElement,\n      billing_details: {\n        name: \"SomeOne\",\n      },\n    }\n    ).then(function (result) {\n      if (result.error) {\n        // Display error.message in your UI\n        resultContainer.textContent = result.error.message;\n      } else {\n        // You have successfully created a new PaymentMethod\n        // resultContainer.textContent = \"Created payment method: \" + result.paymentMethod.id;\n        _this.attachPaymentMethod(result.paymentMethod.id)\n      }\n    });\n  }\n\n  async attachPaymentMethod(paymentMethodId) {\n    const response = this.httpReqService.post(\"attachpaymentmethod\", {\n      orgId: this.tokenData && this.tokenData.user && this.tokenData.user.organizationId ? this.tokenData.user.organizationId : '',\n      paymentMethodId: paymentMethodId,\n    }, false)\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJwcm9maWxlLW90cC5jb21wb25lbnQuc2NzcyJ9 */\";","export default \"<div class=\\\"fade-in\\\">\\n    <c-card>\\n        <c-card-header>\\n            Update Profile\\n        </c-card-header>\\n        <c-card-body>\\n            <c-tabset boxed=\\\"true\\\" [activeTab]=\\\"'0'\\\">\\n                <c-tablist>\\n                    <c-tab *ngFor=\\\"let tab of tabs\\\">\\n                        <c-icon [name]=\\\"tab.icon\\\" class=\\\"pb-1\\\"></c-icon>\\n                        {{tab.header}}\\n                    </c-tab>\\n                </c-tablist>\\n                <c-tab-content>\\n                    <c-tab-pane>\\n                        <c-card>\\n                            <c-card-body>\\n                                <form [formGroup]=\\\"profileForm\\\" novalidate class=\\\"needs-validation\\\">\\n                                    <c-row>\\n                                        <c-col sm=\\\"12\\\" md=\\\"6\\\">\\n                                            <c-form-group>\\n                                                <label for=\\\"ccnumber\\\">Email</label>\\n                                                <input cInput id=\\\"ccnumber\\\" placeholder=\\\"Email\\\"\\n                                                    formControlName=\\\"email\\\">\\n                                                <p class=\\\"errorRes\\\"\\n                                                    *ngIf=\\\"userData && userData.status == 5 || userData.status == 6\\\">\\n                                                    Your email update request is under review\\n                                                </p>\\n                                            </c-form-group>\\n                                        </c-col>\\n                                        <c-col sm=\\\"12\\\" md=\\\"6\\\">\\n                                            <c-form-group>\\n                                                <label cLabel for=\\\"name\\\">Name</label>\\n                                                <input cInput id=\\\"name\\\" placeholder=\\\"Name\\\" formControlName=\\\"name\\\" [readonly]=\\\"userData.status == 4 || userData.status == 6\\\"\\n                                                    [ngClass]=\\\"{ 'is-invalid':  (submitted || f.name.touched) && f.name.invalid, 'is-valid': f.name.touched && f.name.valid }\\\">\\n                                                <div *ngIf=\\\"submitted && f['name'].invalid\\\" class=\\\"invalid-feedback\\\">\\n                                                    <div *ngIf=\\\"f['name'].errors.required\\\">\\n                                                        {{formErrors.name.required}}\\n                                                    </div>\\n                                                    <div *ngIf=\\\"f['name'].errors.pattern\\\">{{formErrors.name.pattern}}\\n                                                    </div>\\n                                                </div>\\n                                                <p class=\\\"errorRes\\\"\\n                                                    *ngIf=\\\"userData && userData.status == 4 || userData.status == 6\\\">\\n                                                    Your name update request is under review\\n                                                </p>\\n                                            </c-form-group>\\n                                        </c-col>\\n                                    </c-row>\\n                                    <c-row>\\n                                        <c-col sm=\\\"12\\\" md=\\\"6\\\">\\n                                            <c-form-group class=\\\"image-section\\\">\\n                                                <label cLabel for=\\\"name\\\">Profile Picture</label>\\n                                                <input cInput type=\\\"file\\\" #file name=\\\"file-input\\\" accept=\\\"image/*\\\"\\n                                                    hidden (change)=\\\"selectProfile($event)\\\">\\n                                                <button cButton type=\\\"submit\\\" color=\\\"primary\\\" size=\\\"md\\\" class=\\\"mfe-1\\\"\\n                                                    (click)=\\\"file.click()\\\">\\n                                                    <span> Choose Profile</span>\\n                                                </button>\\n                                                <img cImg [fluid]=\\\"true\\\" align=\\\"right\\\" shape=\\\"rounded-lg\\\" width=\\\"256\\\"\\n                                                    height=\\\"256\\\" loading=\\\"lazy\\\" [src]=\\\"imgUrl\\\" class=\\\"mb-2\\\"\\n                                                    *ngIf=\\\"imgUrl\\\" class=\\\"mt-2\\\" />\\n                                                <img cImg [fluid]=\\\"true\\\" align=\\\"right\\\" shape=\\\"rounded-lg\\\" width=\\\"256\\\"\\n                                                    height=\\\"256\\\" loading=\\\"lazy\\\" [src]=\\\"mediaUrl + userData.image\\\"\\n                                                    class=\\\"mb-2\\\" *ngIf=\\\"userData && userData.image && !imgUrl\\\"\\n                                                    class=\\\"mt-2\\\" />\\n                                            </c-form-group>\\n                                        </c-col>\\n                                    </c-row>\\n                                </form>\\n                            </c-card-body>\\n                            <c-card-footer>\\n                                <button cButton type=\\\"submit\\\" color=\\\"primary\\\" size=\\\"md\\\" class=\\\"mfe-1\\\"\\n                                    (click)=\\\"onSubmit()\\\">\\n                                    <c-icon name=\\\"cil-check-circle\\\" size=\\\"sm\\\"></c-icon>\\n                                    <span> Save</span>\\n                                </button>\\n                                <button cButton type=\\\"reset\\\" color=\\\"secondary\\\" size=\\\"md\\\" class=\\\"mfe-1\\\"\\n                                    routerLink=\\\"/dashboard\\\">\\n                                    <c-icon name=\\\"cil-x-circle\\\" size=\\\"sm\\\"></c-icon>\\n                                    <span> Cancel</span>\\n                                </button>\\n                            </c-card-footer>\\n                            <div class=\\\"massegeCls\\\"\\n                                [ngClass]=\\\"{'errorRes' : gs.resMassage.status == 'error', 'succassRes' : gs.resMassage.status == 'success'}\\\">\\n                                {{gs.resMassage.massage || ''}}\\n                            </div>\\n                        </c-card>\\n                    </c-tab-pane>\\n                    <c-tab-pane>\\n                        <app-change-password></app-change-password>\\n                    </c-tab-pane>\\n                    <c-tab-pane>\\n                        <app-payment-details></app-payment-details>\\n                    </c-tab-pane>\\n                </c-tab-content>\\n            </c-tabset>\\n        </c-card-body>\\n    </c-card>\\n</div>\";","var V3_URL = 'https://js.stripe.com/v3';\nvar V3_URL_REGEX = /^https:\\/\\/js\\.stripe\\.com\\/v3\\/?(\\?.*)?$/;\nvar EXISTING_SCRIPT_MESSAGE = 'loadStripe.setLoadParameters was called but an existing Stripe.js script already exists in the document; existing script parameters will be used';\nvar findScript = function findScript() {\n  var scripts = document.querySelectorAll(\"script[src^=\\\"\".concat(V3_URL, \"\\\"]\"));\n\n  for (var i = 0; i < scripts.length; i++) {\n    var script = scripts[i];\n\n    if (!V3_URL_REGEX.test(script.src)) {\n      continue;\n    }\n\n    return script;\n  }\n\n  return null;\n};\n\nvar injectScript = function injectScript(params) {\n  var queryString = params && !params.advancedFraudSignals ? '?advancedFraudSignals=false' : '';\n  var script = document.createElement('script');\n  script.src = \"\".concat(V3_URL).concat(queryString);\n  var headOrBody = document.head || document.body;\n\n  if (!headOrBody) {\n    throw new Error('Expected document.body not to be null. Stripe.js requires a <body> element.');\n  }\n\n  headOrBody.appendChild(script);\n  return script;\n};\n\nvar registerWrapper = function registerWrapper(stripe, startTime) {\n  if (!stripe || !stripe._registerWrapper) {\n    return;\n  }\n\n  stripe._registerWrapper({\n    name: 'stripe-js',\n    version: \"1.16.0\",\n    startTime: startTime\n  });\n};\n\nvar stripePromise = null;\nvar loadScript = function loadScript(params) {\n  // Ensure that we only attempt to load Stripe.js at most once\n  if (stripePromise !== null) {\n    return stripePromise;\n  }\n\n  stripePromise = new Promise(function (resolve, reject) {\n    if (typeof window === 'undefined') {\n      // Resolve to null when imported server side. This makes the module\n      // safe to import in an isomorphic code base.\n      resolve(null);\n      return;\n    }\n\n    if (window.Stripe && params) {\n      console.warn(EXISTING_SCRIPT_MESSAGE);\n    }\n\n    if (window.Stripe) {\n      resolve(window.Stripe);\n      return;\n    }\n\n    try {\n      var script = findScript();\n\n      if (script && params) {\n        console.warn(EXISTING_SCRIPT_MESSAGE);\n      } else if (!script) {\n        script = injectScript(params);\n      }\n\n      script.addEventListener('load', function () {\n        if (window.Stripe) {\n          resolve(window.Stripe);\n        } else {\n          reject(new Error('Stripe.js not available'));\n        }\n      });\n      script.addEventListener('error', function () {\n        reject(new Error('Failed to load Stripe.js'));\n      });\n    } catch (error) {\n      reject(error);\n      return;\n    }\n  });\n  return stripePromise;\n};\nvar initStripe = function initStripe(maybeStripe, args, startTime) {\n  if (maybeStripe === null) {\n    return null;\n  }\n\n  var stripe = maybeStripe.apply(undefined, args);\n  registerWrapper(stripe, startTime);\n  return stripe;\n};\n\n// own script injection.\n\nvar stripePromise$1 = Promise.resolve().then(function () {\n  return loadScript(null);\n});\nvar loadCalled = false;\nstripePromise$1[\"catch\"](function (err) {\n  if (!loadCalled) {\n    console.warn(err);\n  }\n});\nvar loadStripe = function loadStripe() {\n  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n\n  loadCalled = true;\n  var startTime = Date.now();\n  return stripePromise$1.then(function (maybeStripe) {\n    return initStripe(maybeStripe, args, startTime);\n  });\n};\n\nexport { loadStripe };\n"],"sourceRoot":"webpack:///"}