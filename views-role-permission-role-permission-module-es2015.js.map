{"version":3,"sources":["./src/app/views/role-permission/role-permission.component.ts","./src/app/views/role-permission/role-permission.module.ts","./src/app/views/role-permission/role-permission.component.html","./src/app/views/role-permission/role-permission.component.scss"],"names":[],"mappings":"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","file":"views-role-permission-role-permission-module-es2015.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { HttpReqService } from '../../services/http-req.service';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ValidationFormsService } from '../../services/validation-forms.service';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { GridOption } from '../../partial/model/gridOption';\nimport { GlobalService } from './../../services/global.service';\n\n@Component({\n  selector: 'app-role-permission',\n  templateUrl: './role-permission.component.html',\n  styleUrls: ['./role-permission.component.scss']\n})\nexport class RolePermissionComponent implements OnInit {\n  submitted = false;\n  formErrors: any;\n  roleArr: any = ['Admin',\n    'Super Admin',\n    'Scanner',\n    'Intaller',\n    'ScannerAndInstaller',\n    'Resellers',\n    'Organization Manager'];\n  permissionForm: FormGroup;\n  permissionArr: any = [{\n    name: 'Add Device',\n    slug: 'addDevice',\n    checked: false\n  }, {\n    name: 'Device Allocation',\n    slug: 'deviceAllocation',\n    checked: false\n  }, {\n    name: 'New Organization',\n    slug: 'newOrganization',\n    checked: false\n  }, {\n    name: 'Add Organization Price',\n    slug: 'addOrganizationPrice',\n    checked: false\n  }, {\n    name: 'View Unique Organization Code',\n    slug: 'viewOrgCode',\n    checked: false\n  }, {\n    name: 'Approve Request For Join Organization',\n    slug: 'approveReqForJoinOrg',\n    checked: false\n  }, {\n    name: 'View Organization Scan',\n    slug: 'viewScanOrg',\n    checked: false\n  }, {\n    name: 'View Scan History',\n    slug: 'viewScanHistory',\n    checked: false\n  }];\n  allPermissionArr = [];\n  role: any;\n  permissions: any = [];\n  selectedTemplateIndex: any;\n  gridOption: GridOption = {\n    allrecords: true,\n    sortField: 'role',\n    sortOrder: 'asc',\n  };\n  permissionList: any;\n  constructor(\n    private httpReqService: HttpReqService,\n    private fb: FormBuilder,\n    public vf: ValidationFormsService,\n    private router: Router,\n    private route: ActivatedRoute,\n    public gs: GlobalService\n  ) {\n    this.httpReqService.clearMassage();\n  }\n\n  ngOnInit(): void {\n    this.createForm();\n    this.formErrors = this.vf.errorMessages;\n    this.allPermissionArr = this.permissionArr.map(a => ({ ...a }));\n  }\n\n  /**\n   * Create profile form\n   */\n  createForm() {\n    this.permissionForm = this.fb.group(\n      {\n        role: [\n          '',\n          [\n            Validators.required,\n          ],\n        ],\n        permissions: ['', [\n          // Validators.required,\n        ]],\n      }\n    );\n  }\n\n  // convenience getter for easy access to form fields\n  get f() {\n    return this.permissionForm.controls;\n  }\n\n  onValidate() {\n    this.submitted = true;\n\n    // stop here if form is invalid\n    return this.permissionForm.status === 'VALID';\n  }\n\n  async changeRole() {\n    this.permissionArr = this.allPermissionArr.map(a => ({ ...a }));\n    const response: any = await this.httpReqService.post('rolePermission/roleWiseGetPermission', this.permissionForm.value, false);\n    if (response && response.items) {\n      this.permissionList = response.items.permissions;\n      if (this.permissionList.length) {\n        this.permissionArr.forEach((permission, i) => {\n          if (this.permissionList.includes(permission.slug)) {\n            permission.checked = true;\n          }\n        });\n      }\n    }\n  }\n\n\n  changeCheckbox(permission) {\n    this.permissionArr[permission].checked = !this.permissionArr[permission].checked;\n  }\n\n  async save() {\n    if (this.onValidate()) {\n      this.permissions = [];\n      this.permissionArr.forEach((permission, i) => {\n        if (permission.checked) {\n          this.permissions.push(permission.slug);\n        }\n      });\n      const obj = {\n        permissions: this.permissions,\n        role: this.permissionForm.value.role\n      };\n      const response: any = await this.httpReqService.post('rolePermission/create', obj, true);\n      if (response) {\n        this.submitted = false;\n        this.permissionForm.reset();\n        this.permissionArr = this.allPermissionArr.map(a => ({ ...a }));\n      }\n    }\n  }\n\n  filterData(event, type) {\n    const val = event.target.value;\n    if (event.target.value) {\n      this.role = val;\n    }\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RolePermissionComponent } from './role-permission.component';\nimport { RouterModule } from '@angular/router';\nimport { ButtonModule, CardModule, FormModule, GridModule, TabsetModule } from '@coreui/angular';\nimport { IconModule } from '@coreui/icons-angular';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nconst route = [\n  {\n    path: '',\n    data: {\n      title: 'Role-permission',\n    },\n    children: [\n      {\n        path: '',\n        redirectTo: 'role-permission',\n      },\n      {\n        path: '',\n        data: {\n          title: '',\n        },\n        component: RolePermissionComponent\n      },\n    ]\n  }\n];\n\n@NgModule({\n  declarations: [\n    RolePermissionComponent\n  ],\n  imports: [\n    CommonModule,\n    RouterModule.forChild(route),\n    CardModule,\n    IconModule,\n    GridModule,\n    FormsModule,\n    ButtonModule,\n    ReactiveFormsModule,\n    FormModule\n  ]\n})\nexport class RolePermissionModule { }\n","export default \"<div class=\\\"fade-in\\\">\\n    <c-row>\\n        <c-col md=\\\"12\\\">\\n            <c-card>\\n                <c-card-header>\\n                    <strong>Role Wise Permission</strong>\\n                </c-card-header>\\n                <c-card-body>\\n                    <form class=\\\"form-horizontal needs-validation\\\" [formGroup]=\\\"permissionForm\\\" novalidate>\\n                        <c-form-group cRow>\\n                            <label cLabel=\\\"col\\\" cCol md=\\\"3\\\" for=\\\"text-input\\\">Role</label>\\n                            <c-col md=\\\"9\\\">\\n                                <select cSelect id=\\\"select1\\\" (change)=\\\"changeRole()\\\" formControlName=\\\"role\\\">\\n                                    <option value='' selected>Choose Role</option>\\n                                    <option [value]=\\\"role\\\" *ngFor=\\\"let role of roleArr\\\"> {{role}}\\n                                    </option>\\n                                </select>\\n                                <div *ngIf=\\\"submitted && f['role'].invalid\\\" class=\\\"invalid-feedback d-block\\\">\\n                                    <div *ngIf=\\\"f['role'].errors.required\\\">\\n                                        {{formErrors.role.required}}\\n                                    </div>\\n                                </div>\\n                            </c-col>\\n                        </c-form-group>\\n                        <c-form-group cRow class=\\\"text-editor\\\">\\n                            <label cLabel=\\\"col\\\" cCol md=\\\"3\\\" for=\\\"text-input\\\">Permission</label>\\n                            <c-col md=\\\"9\\\">\\n                                <c-form-check inline custom variant=\\\"checkbox\\\" class=\\\"mfe-3\\\"\\n                                    *ngFor=\\\"let permission of permissionArr; let i = index;\\\">\\n                                    <!-- <c-col md=\\\"9\\\"> -->\\n                                    <input cInput formControlName=\\\"permissions\\\" type=\\\"checkbox\\\"\\n                                        id=\\\"permission{{permission.slug}}\\\" (change)=\\\"changeCheckbox(i)\\\" value=\\\"option1\\\"\\n                                        name=\\\"permissionOptions\\\" [checked]=\\\"permission.checked\\\"\\n                                        class=\\\"custom-control-input\\\">\\n                                    <label class=\\\"custom-control-label\\\" for=\\\"permission{{permission.slug}}\\\">\\n                                        {{permission.name}}</label>\\n                                </c-form-check>\\n                                <!-- <div *ngIf=\\\"submitted && f['permissions'].invalid\\\" class=\\\"invalid-feedback d-block\\\">\\n                                    <div *ngIf=\\\"f['permissions'].errors.required\\\">\\n                                        {{formErrors.permissions.required}}\\n                                    </div>\\n                                </div> -->\\n                            </c-col>\\n                        </c-form-group>\\n                    </form>\\n                </c-card-body>\\n                <c-card-footer>\\n                    <button cButton type=\\\"submit\\\" color=\\\"primary\\\" size=\\\"md\\\" class=\\\"mfe-1\\\" (click)=\\\"save()\\\">\\n                        <c-icon name=\\\"cil-check-circle\\\" size=\\\"sm\\\"></c-icon>\\n                        <span> Submit</span>\\n                    </button>\\n                </c-card-footer>\\n                <div class=\\\"massegeCls\\\"\\n                    [ngClass]=\\\"{'errorRes' : gs.resMassage.status == 'error', 'succassRes' : gs.resMassage.status == 'success'}\\\">\\n                    {{gs.resMassage.massage || ''}}\\n                </div>\\n            </c-card>\\n        </c-col>\\n    </c-row>\\n</div>\";","export default \".form-check {\\n  margin-bottom: 10px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3JvbGUtcGVybWlzc2lvbi5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLG1CQUFBO0FBQ0oiLCJmaWxlIjoicm9sZS1wZXJtaXNzaW9uLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmZvcm0tY2hlY2t7XG4gICAgbWFyZ2luLWJvdHRvbTogMTBweDtcbn1cbi8vIC5mb3JtLWNoZWNrLWlucHV0e1xuLy8gICAgIG1hcmdpbjogNXB4O1xuLy8gfSJdfQ== */\";"],"sourceRoot":"webpack:///"}